{"version":3,"file":"explore.d756ff5fc6a5ac3b66e9.js","mappings":"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","sources":["webpack://grafana/./public/app/features/explore/ExploreActions.tsx","webpack://grafana/./public/app/features/explore/ExploreGraph.tsx","webpack://grafana/./public/app/features/explore/exploreGraphStyleUtils.ts","webpack://grafana/./public/app/features/explore/ExploreGraphLabel.tsx","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/3/opt/drone/yarncache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/resizer.js","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/3/opt/drone/yarncache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/Time.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/Logs.tsx","webpack://grafana/./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/NoData.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/NodeGraphContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/TableContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/Wrapper.tsx","webpack://grafana/./public/app/features/explore/state/selectors.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-0c21d950b6/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useInterval.js","webpack://grafana/../../opt/drone/yarncache/immer-npm-9.0.15-6c734225db-92e3d63e81.zip/node_modules/immer/dist/immer.esm.mjs"],"sourcesContent":["import { useRegisterActions, useKBar, Action, Priority } from 'kbar';\nimport { FC, useEffect, useState } from 'react';\n\nimport { ExploreId, useDispatch, useSelector } from 'app/types';\n\nimport { splitOpen, splitClose } from './state/main';\nimport { runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\n\ninterface Props {\n  exploreIdLeft: ExploreId;\n  exploreIdRight?: ExploreId;\n}\n\nexport const ExploreActions: FC<Props> = ({ exploreIdLeft, exploreIdRight }: Props) => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const { query } = useKBar();\n  const dispatch = useDispatch();\n  const splitted = useSelector(isSplit);\n\n  useEffect(() => {\n    const exploreSection = {\n      name: 'Explore',\n      priority: Priority.HIGH + 1,\n    };\n\n    const actionsArr: Action[] = [];\n\n    if (splitted) {\n      actionsArr.push({\n        id: 'explore/run-query-left',\n        name: 'Run query (left)',\n        keywords: 'query left',\n        perform: () => {\n          dispatch(runQueries(exploreIdLeft));\n        },\n        section: exploreSection,\n      });\n      if (exploreIdRight) {\n        // we should always have the right exploreId if split\n        actionsArr.push({\n          id: 'explore/run-query-right',\n          name: 'Run query (right)',\n          keywords: 'query right',\n          perform: () => {\n            dispatch(runQueries(exploreIdRight));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-left',\n          name: 'Close split view left',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(exploreIdLeft));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-right',\n          name: 'Close split view right',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(exploreIdRight));\n          },\n          section: exploreSection,\n        });\n      }\n    } else {\n      actionsArr.push({\n        id: 'explore/run-query',\n        name: 'Run query',\n        keywords: 'query',\n        perform: () => {\n          dispatch(runQueries(exploreIdLeft));\n        },\n        section: exploreSection,\n      });\n      actionsArr.push({\n        id: 'explore/split-view-open',\n        name: 'Open split view',\n        keywords: 'split',\n        perform: () => {\n          dispatch(splitOpen());\n        },\n        section: exploreSection,\n      });\n    }\n    setActions(actionsArr);\n  }, [exploreIdLeft, exploreIdRight, splitted, query, dispatch]);\n\n  useRegisterActions(!query ? [] : actions, [actions, query]);\n\n  return null;\n};\n","import { css, cx } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { usePrevious } from 'react-use';\n\nimport {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  compareArrayValues,\n  compareDataFrameStructures,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphDrawStyle, LegendDisplayMode, TooltipDisplayMode, SortOrder } from '@grafana/schema';\nimport {\n  Icon,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { TimeSeriesOptions } from 'app/plugins/panel/timeseries/types';\n\nimport { ExploreGraphStyle } from '../../types';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\n\nimport { applyGraphStyle } from './exploreGraphStyleUtils';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  loadingState: LoadingState;\n  annotations?: DataFrame[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode?: TooltipDisplayMode;\n  splitOpenFn: SplitOpen;\n  onChangeTime: (timeRange: AbsoluteTimeRange) => void;\n  graphStyle: ExploreGraphStyle;\n}\n\nexport function ExploreGraph({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onChangeTime,\n  loadingState,\n  annotations,\n  onHiddenSeriesChanged,\n  splitOpenFn,\n  graphStyle,\n  tooltipDisplayMode = TooltipDisplayMode.Single,\n}: Props) {\n  const theme = useTheme2();\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [baseStructureRev, setBaseStructureRev] = useState(1);\n\n  const previousData = usePrevious(data);\n  const structureChangesRef = useRef(0);\n  const structureRev = baseStructureRev + structureChangesRef.current;\n  const prevStructureRev = usePrevious(structureRev);\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  if (data && previousData && !compareArrayValues(previousData, data, compareDataFrameStructures)) {\n    structureChangesRef.current++;\n\n    if (prevStructureRev === structureRev) {\n      setFieldConfig({ ...fieldConfig, overrides: [] });\n    }\n  }\n\n  const style = useStyles2(getStyles);\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const dataWithConfig = useMemo(() => {\n    const registry = createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore');\n    const styledFieldConfig = applyGraphStyle(fieldConfig, graphStyle);\n    return applyFieldOverrides({\n      fieldConfig: styledFieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry: registry,\n    });\n  }, [fieldConfig, graphStyle, data, timeZone, theme]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const panelContext: PanelContext = {\n    eventBus: appEvents,\n    onSplitOpen: splitOpenFn,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setBaseStructureRev((r) => r + 1);\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              structureChangesRef.current++;\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <PanelRenderer\n        data={{ series: seriesToShow, timeRange, structureRev, state: loadingState, annotations }}\n        pluginId=\"timeseries\"\n        title=\"\"\n        width={width}\n        height={height}\n        onChangeTimeRange={onChangeTime}\n        timeZone={timeZone}\n        options={\n          {\n            tooltip: { mode: tooltipDisplayMode, sort: SortOrder.None },\n            legend: {\n              displayMode: LegendDisplayMode.List,\n              showLegend: true,\n              placement: 'bottom',\n              calcs: [],\n            },\n          } as TimeSeriesOptions\n        }\n      />\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing(1)} auto;\n    padding: 10px 0;\n    border-radius: ${theme.spacing(2)};\n    text-align: center;\n    background-color: ${theme.colors.background.primary};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.warning.main};\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.text.link};\n  `,\n});\n","import produce from 'immer';\n\nimport { FieldConfigSource } from '@grafana/data';\nimport { GraphDrawStyle, GraphFieldConfig, StackingMode } from '@grafana/schema';\n\nimport { ExploreGraphStyle } from '../../types';\n\nexport type FieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport function applyGraphStyle(config: FieldConfig, style: ExploreGraphStyle): FieldConfig {\n  return produce(config, (draft) => {\n    if (draft.defaults.custom === undefined) {\n      draft.defaults.custom = {};\n    }\n\n    const { custom } = draft.defaults;\n\n    if (custom.stacking === undefined) {\n      custom.stacking = { group: 'A' };\n    }\n\n    switch (style) {\n      case 'lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 100;\n        break;\n      case 'points':\n        custom.drawStyle = GraphDrawStyle.Points;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'stacked_lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      case 'stacked_bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      default: {\n        // should never happen\n        // NOTE: casting to `never` will cause typescript\n        // to verify that the switch statement checks every possible\n        // enum-value\n        const invalidValue: never = style;\n        throw new Error(`Invalid graph-style: ${invalidValue}`);\n      }\n    }\n  });\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { EXPLORE_GRAPH_STYLES, ExploreGraphStyle } from '../../types';\n\nconst ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<ExploreGraphStyle>> = EXPLORE_GRAPH_STYLES.map((style) => ({\n  value: style,\n  // capital-case it and switch `_` to ` `\n  label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n}));\n\nconst spacing = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\ntype Props = {\n  graphStyle: ExploreGraphStyle;\n  onChangeGraphStyle: (style: ExploreGraphStyle) => void;\n};\n\nexport function ExploreGraphLabel(props: Props) {\n  const { graphStyle, onChangeGraphStyle } = props;\n  return (\n    <div className={spacing}>\n      Graph\n      <RadioButtonGroup size=\"sm\" options={ALL_GRAPH_STYLE_OPTIONS} value={graphStyle} onChange={onChangeGraphStyle} />\n    </div>\n  );\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar rowSizeBase = {\n    width: '100%',\n    height: '10px',\n    top: '0px',\n    left: '0px',\n    cursor: 'row-resize',\n};\nvar colSizeBase = {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '0px',\n    cursor: 'col-resize',\n};\nvar edgeBase = {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n};\nvar styles = {\n    top: __assign(__assign({}, rowSizeBase), { top: '-5px' }),\n    right: __assign(__assign({}, colSizeBase), { left: undefined, right: '-5px' }),\n    bottom: __assign(__assign({}, rowSizeBase), { top: undefined, bottom: '-5px' }),\n    left: __assign(__assign({}, colSizeBase), { left: '-5px' }),\n    topRight: __assign(__assign({}, edgeBase), { right: '-10px', top: '-10px', cursor: 'ne-resize' }),\n    bottomRight: __assign(__assign({}, edgeBase), { right: '-10px', bottom: '-10px', cursor: 'se-resize' }),\n    bottomLeft: __assign(__assign({}, edgeBase), { left: '-10px', bottom: '-10px', cursor: 'sw-resize' }),\n    topLeft: __assign(__assign({}, edgeBase), { left: '-10px', top: '-10px', cursor: 'nw-resize' }),\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { Resizer } from './resizer';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = function (n, min, max) { return Math.max(Math.min(n, max), min); };\nvar snap = function (n, size) { return Math.round(n / size) * size; };\nvar hasDirection = function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n};\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n};\nvar getStringSize = function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (n.endsWith('px')) {\n        return n;\n    }\n    if (n.endsWith('%')) {\n        return n;\n    }\n    if (n.endsWith('vh')) {\n        return n;\n    }\n    if (n.endsWith('vw')) {\n        return n;\n    }\n    if (n.endsWith('vmax')) {\n        return n;\n    }\n    if (n.endsWith('vmin')) {\n        return n;\n    }\n    return n + \"px\";\n};\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (size.endsWith('px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (size.endsWith('%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (size.endsWith('vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (size.endsWith('vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n};\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith('%')) {\n                    if (_this.state[key].toString().endsWith('%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        var _this = this;\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (width.endsWith('%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (width.endsWith('vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (width.endsWith('vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (height.endsWith('%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (height.endsWith('vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (height.endsWith('vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        // For v18, update state sync\n        flushSync(function () {\n            _this.setState(newState);\n        });\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport { css, cx, keyframes } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport React from 'react';\n\n// Services & Utils\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\n\nconst drawerSlide = (theme: GrafanaTheme2) => keyframes`\n  0% {\n    transform: translateY(${theme.components.horizontalDrawer.defaultHeight}px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.navbarFixed};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide(theme)};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: `${theme.components.horizontalDrawer.defaultHeight}px` }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  useEffect(() => {\n    reportInteraction('grafana_explore_query_inspector_opened');\n  }, []);\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\n\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\nimport { ExploreId } from 'app/types';\n\nimport { TimeSyncButton } from './TimeSyncButton';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n\n    reportInteraction('grafana_explore_time_picker_time_range_changed', {\n      timeRangeFrom: adjustedFrom,\n      timeRangeTo: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        widthOverride={splitted ? window.innerWidth / 2 : undefined}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React, { useCallback } from 'react';\n\nimport { RefreshPicker } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { ExploreId } from '../../types';\n\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { changeRefreshInterval } from './state/time';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React, { lazy, PureComponent, RefObject, Suspense } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { config, DataSourcePicker, reportInteraction } from '@grafana/runtime';\nimport { defaultIntervals, PageToolbar, RefreshPicker, SetInterval, ToolbarButton } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { AccessControlAction } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types/store';\n\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\nimport { getTimeSrv } from '../dashboard/services/TimeSrv';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { cancelQueries, runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nclass UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    const { changeDatasource, exploreId } = this.props;\n    changeDatasource(exploreId, dsSettings.uid, { importQueries: true });\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  onCopyShortLink = async () => {\n    await createAndCopyShortLink(window.location.href);\n    reportInteraction('grafana_explore_shortened_link_clicked');\n  };\n\n  onOpenSplitView = () => {\n    const { split } = this.props;\n    split();\n    reportInteraction('grafana_explore_split_view_opened', { origin: 'menu' });\n  };\n\n  onCloseSplitView = () => {\n    const { closeSplit, exploreId } = this.props;\n    closeSplit(exploreId);\n    reportInteraction('grafana_explore_split_view_closed');\n  };\n\n  renderRefreshPicker = (showSmallTimePicker: boolean) => {\n    const { loading, refreshInterval, isLive } = this.props;\n\n    let refreshPickerText: string | undefined = loading ? 'Cancel' : 'Run query';\n    let refreshPickerTooltip = undefined;\n    let refreshPickerWidth = '108px';\n    if (showSmallTimePicker) {\n      refreshPickerTooltip = refreshPickerText;\n      refreshPickerText = undefined;\n      refreshPickerWidth = '35px';\n    }\n\n    return (\n      <RefreshPicker\n        onIntervalChanged={this.onChangeRefreshInterval}\n        value={refreshInterval}\n        isLoading={loading}\n        text={refreshPickerText}\n        tooltip={refreshPickerTooltip}\n        intervals={getTimeSrv().getValidIntervals(defaultIntervals)}\n        isLive={isLive}\n        onRefresh={() => this.onRunQuery(loading)}\n        noIntervalPicker={isLive}\n        primary={true}\n        width={refreshPickerWidth}\n      />\n    );\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      containerWidth,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n      topOfViewRef,\n    } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    const showExploreToDashboard =\n      contextSrv.hasAccess(AccessControlAction.DashboardsCreate, contextSrv.isEditor) ||\n      contextSrv.hasAccess(AccessControlAction.DashboardsWrite, contextSrv.isEditor);\n\n    return (\n      <div ref={topOfViewRef}>\n        <PageToolbar\n          aria-label=\"Explore toolbar\"\n          title={exploreId === ExploreId.left ? 'Explore' : undefined}\n          pageIcon={exploreId === ExploreId.left ? 'compass' : undefined}\n          leftItems={[\n            exploreId === ExploreId.left && (\n              <DashNavButton\n                key=\"share\"\n                tooltip=\"Copy shortened link\"\n                icon=\"share-alt\"\n                onClick={this.onCopyShortLink}\n                aria-label=\"Copy shortened link\"\n              />\n            ),\n            !datasourceMissing && (\n              <DataSourcePicker\n                key={`${exploreId}-ds-picker`}\n                mixed={config.featureToggles.exploreMixedDatasource === true}\n                onChange={this.onChangeDatasource}\n                current={this.props.datasourceRef}\n                hideTextValue={showSmallDataSourcePicker}\n                width={showSmallDataSourcePicker ? 8 : undefined}\n              />\n            ),\n          ].filter(Boolean)}\n        >\n          <>\n            {!splitted ? (\n              <ToolbarButton tooltip=\"Split the pane\" onClick={this.onOpenSplitView} icon=\"columns\" disabled={isLive}>\n                Split\n              </ToolbarButton>\n            ) : (\n              <ToolbarButton tooltip=\"Close split pane\" onClick={this.onCloseSplitView} icon=\"times\">\n                Close\n              </ToolbarButton>\n            )}\n\n            {config.featureToggles.explore2Dashboard && showExploreToDashboard && (\n              <Suspense fallback={null}>\n                <AddToDashboard exploreId={exploreId} />\n              </Suspense>\n            )}\n\n            {!isLive && (\n              <ExploreTimeControls\n                exploreId={exploreId}\n                range={range}\n                timeZone={timeZone}\n                fiscalYearStartMonth={fiscalYearStartMonth}\n                onChangeTime={onChangeTime}\n                splitted={splitted}\n                syncedTimes={syncedTimes}\n                onChangeTimeSync={this.onChangeTimeSync}\n                hideText={showSmallTimePicker}\n                onChangeTimeZone={onChangeTimeZone}\n                onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n              />\n            )}\n\n            {this.renderRefreshPicker(showSmallTimePicker)}\n\n            {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n\n            {hasLiveOption && (\n              <LiveTailControls exploreId={exploreId}>\n                {(c) => {\n                  const controls = {\n                    ...c,\n                    start: () => {\n                      reportInteraction('grafana_explore_logs_live_tailing_clicked', {\n                        datasourceType: this.props.datasourceType,\n                      });\n                      c.start();\n                    },\n                  };\n                  return (\n                    <LiveTailButton\n                      splitted={splitted}\n                      isLive={isLive}\n                      isPaused={isPaused}\n                      start={controls.start}\n                      pause={controls.pause}\n                      resume={controls.resume}\n                      stop={controls.stop}\n                    />\n                  );\n                }}\n              </LiveTailControls>\n            )}\n          </>\n        </PageToolbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const { syncedTimes } = state.explore;\n  const exploreItem = state.explore[exploreId]!;\n  const { datasourceInstance, datasourceMissing, range, refreshInterval, loading, isLive, isPaused, containerWidth } =\n    exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceRef: datasourceInstance?.getRef(),\n    datasourceType: datasourceInstance?.type,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    fiscalYearStartMonth: getFiscalYearStartMonth(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  onChangeFiscalYearStartMonth: updateFiscalYearStartMonthForSession,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = connector(UnConnectedExploreToolbar);\n","import React, { FC } from 'react';\n\nimport { toDuration } from '@grafana/data';\n\nexport interface TimeProps {\n  timeInMs: number;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport const Time: FC<TimeProps> = ({ timeInMs, className, humanize }) => {\n  return <span className={className}>{formatTime(timeInMs, humanize)}</span>;\n};\n\nconst formatTime = (timeInMs: number, humanize = false): string => {\n  const inSeconds = timeInMs / 1000;\n\n  if (!humanize) {\n    return `${inSeconds.toFixed(1)}s`;\n  }\n\n  const duration = toDuration(inSeconds, 'seconds');\n  const hours = duration.hours();\n  const minutes = duration.minutes();\n  const seconds = duration.seconds();\n\n  if (hours) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  }\n\n  if (minutes) {\n    return `${minutes}m ${seconds}s`;\n  }\n\n  return `${seconds}s`;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\n\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Button, Themeable2, withTheme2 } from '@grafana/ui';\n\nimport { LogMessageAnsi } from '../logs/components/LogMessageAnsi';\nimport { getLogRowStyles } from '../logs/components/getLogRowStyles';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={styles.logsRowsLive}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={logsRowLocalTime}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={logsRowMessage}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                // As scrollTo is not implemented in JSDOM it needs to be part of the condition\n                if (this.liveEndDiv && this.scrollContainerRef.current?.scrollTo && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: baseline;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import React from 'react';\n\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, Tooltip } from '@grafana/ui';\n\nimport { LogLabels } from '../logs/components/LogLabels';\nimport { MAX_CHARACTERS } from '../logs/components/LogRowMessage';\n\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }: Props) => {\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show original line\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              {forceEscape ? 'Remove escaping' : 'Escape newlines'}\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n\n    return (\n      <>\n        {logsMetaItem && (\n          <MetaInfoText\n            metaItems={logsMetaItem.map((item) => {\n              return {\n                label: item.label,\n                value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n              };\n            })}\n          />\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return <LogLabels labels={value} />;\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { CustomScrollbar, Spinner, useTheme2 } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => {\n                reportInteraction('grafana_explore_logs_pagination_clicked', {\n                  pageType: 'page',\n                  pageNumber: index + 1,\n                });\n                !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n              }}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport React, { memo, useState, useEffect, useRef } from 'react';\n\nimport { LogsSortOrder, AbsoluteTimeRange, TimeZone, DataQuery, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\n\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component is mounted.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'olderLogsButton',\n        });\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'newerLogsButton',\n        });\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean, loading: boolean) => {\n  return {\n    navContainer: css`\n      max-height: 95vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataQueryError,\n  DataQueryResponse,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { Alert, Button, Collapse, InlineField, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { ExploreGraph } from './ExploreGraph';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  logLinesBasedData: DataQueryResponse | undefined;\n  logLinesBasedDataVisibleRange: AbsoluteTimeRange | undefined;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n};\n\nconst SHORT_ERROR_MESSAGE_LIMIT = 100;\n\nfunction ErrorAlert(props: { error: DataQueryError }) {\n  const [isOpen, setIsOpen] = useState(false);\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = props.error.message || props.error.data?.message || '';\n\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n\n  return (\n    <Alert title=\"Failed to load log volume for this query\" severity=\"warning\">\n      {showButton ? (\n        <Button\n          variant=\"secondary\"\n          size=\"xs\"\n          onClick={() => {\n            setIsOpen(true);\n          }}\n        >\n          Show details\n        </Button>\n      ) : (\n        message\n      )}\n    </Alert>\n  );\n}\n\nfunction createVisualisationData(\n  logLinesBased: DataQueryResponse | undefined,\n  logLinesBasedVisibleRange: AbsoluteTimeRange | undefined,\n  fullRangeData: DataQueryResponse | undefined,\n  absoluteRange: AbsoluteTimeRange\n):\n  | {\n      logsVolumeData: DataQueryResponse;\n      fullRangeData: boolean;\n      range: AbsoluteTimeRange;\n    }\n  | undefined {\n  if (fullRangeData !== undefined) {\n    return {\n      logsVolumeData: fullRangeData,\n      fullRangeData: true,\n      range: absoluteRange,\n    };\n  }\n\n  if (logLinesBased !== undefined) {\n    return {\n      logsVolumeData: logLinesBased,\n      fullRangeData: false,\n      range: logLinesBasedVisibleRange || absoluteRange,\n    };\n  }\n\n  return undefined;\n}\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, timeZone, splitOpen, onUpdateTimeRange, onLoadLogsVolume, onHiddenSeriesChanged } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  const data = createVisualisationData(\n    props.logLinesBasedData,\n    props.logLinesBasedDataVisibleRange,\n    props.logsVolumeData,\n    props.absoluteRange\n  );\n\n  if (data === undefined) {\n    return null;\n  }\n\n  const { logsVolumeData, fullRangeData, range } = data;\n\n  if (logsVolumeData.error !== undefined) {\n    return <ErrorAlert error={logsVolumeData.error} />;\n  }\n\n  let LogsVolumePanelContent;\n\n  if (logsVolumeData?.state === LoadingState.Loading) {\n    LogsVolumePanelContent = <span>Log volume is loading...</span>;\n  } else if (logsVolumeData?.data) {\n    if (logsVolumeData.data.length > 0) {\n      LogsVolumePanelContent = (\n        <ExploreGraph\n          graphStyle=\"lines\"\n          loadingState={LoadingState.Done}\n          data={logsVolumeData.data}\n          height={height}\n          width={width - spacing}\n          absoluteRange={range}\n          onChangeTime={onUpdateTimeRange}\n          timeZone={timeZone}\n          splitOpenFn={splitOpen}\n          tooltipDisplayMode={TooltipDisplayMode.Multi}\n          onHiddenSeriesChanged={onHiddenSeriesChanged}\n        />\n      );\n    } else {\n      LogsVolumePanelContent = <span>No volume data.</span>;\n    }\n  }\n\n  let extraInfo;\n  if (fullRangeData) {\n    const zoomRatio = logsLevelZoomRatio(logsVolumeData, range);\n\n    if (zoomRatio !== undefined && zoomRatio < 1) {\n      extraInfo = (\n        <InlineField label=\"Reload log volume\" transparent>\n          <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n        </InlineField>\n      );\n    }\n  } else {\n    extraInfo = (\n      <div className={styles.oldInfoText}>\n        This datasource does not support full-range histograms. The graph is based on the logs seen in the response.\n      </div>\n    );\n  }\n  return (\n    <Collapse label=\"\" isOpen={true}>\n      <div style={{ height }} className={styles.contentContainer}>\n        {LogsVolumePanelContent}\n      </div>\n      <div className={styles.extraInfoContainer}>{extraInfo}</div>\n    </Collapse>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n    oldInfoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataQueryResponse | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData.data[0] && logsVolumeData.data[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent, createRef } from 'react';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataQuery,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  DataQueryResponse,\n  CoreApp,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport {\n  RadioButtonGroup,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n} from '@grafana/ui';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logsModel';\nimport store from 'app/core/store';\nimport { ExploreId } from 'app/types/explore';\n\nimport { RowContextOptions } from '../logs/components/LogRowContextProvider';\nimport { LogRows } from '../logs/components/LogRows';\n\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { LogsVolumePanel } from './LogsVolumePanel';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n  logsSortOrder: 'grafana.explore.logs.sortOrder',\n};\n\ninterface Props extends Themeable2 {\n  width: number;\n  splitOpen: SplitOpen;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  exploreId: ExploreId;\n  datasourceType?: string;\n  logsVolumeData: DataQueryResponse | undefined;\n  loadLogsVolumeData: (exploreId: ExploreId) => void;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        const newSortOrder =\n          prevState.logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n        store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n        return { logsSortOrder: newSortOrder };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    reportInteraction('grafana_explore_logs_deduplication_clicked', {\n      deduplicationType: dedupStrategy,\n      datasourceType: this.props.datasourceType,\n    });\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangeWrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  createNavigationRange = memoizeOne((logRows: LogRowModel[]): { from: number; to: number } | undefined => {\n    if (!logRows || logRows.length === 0) {\n      return undefined;\n    }\n    const firstTimeStamp = logRows[0].timeEpochMs;\n    const lastTimeStamp = logRows[logRows.length - 1].timeEpochMs;\n\n    if (lastTimeStamp < firstTimeStamp) {\n      return { from: lastTimeStamp, to: firstTimeStamp };\n    }\n\n    return { from: firstTimeStamp, to: lastTimeStamp };\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      splitOpen,\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      logsVolumeData,\n      loadLogsVolumeData,\n      loading = false,\n      loadingState,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n      exploreId,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n    const navigationRange = this.createNavigationRange(logRows);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        <LogsVolumePanel\n          absoluteRange={absoluteRange}\n          width={width}\n          logsVolumeData={logsVolumeData}\n          logLinesBasedData={\n            logsSeries\n              ? {\n                  data: logsSeries,\n                  state: loadingState,\n                }\n              : undefined\n          }\n          logLinesBasedDataVisibleRange={visibleRange}\n          onUpdateTimeRange={onChangeTime}\n          timeZone={timeZone}\n          splitOpen={splitOpen}\n          onLoadLogsVolume={() => loadLogsVolumeData(exploreId)}\n          onHiddenSeriesChanged={this.onToggleLogLevel}\n        />\n        <div className={styles.logOptions} ref={this.topLogsRef}>\n          <InlineFieldRow>\n            <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={showTime}\n                onChange={this.onChangeTime}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id={`show-time_${exploreId}`}\n              />\n            </InlineField>\n            <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={showLabels}\n                onChange={this.onChangeLabels}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id={`unique-labels_${exploreId}`}\n              />\n            </InlineField>\n            <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={wrapLogMessage}\n                onChange={this.onChangeWrapLogMessage}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id={`wrap-lines_${exploreId}`}\n              />\n            </InlineField>\n            <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={prettifyLogMessage}\n                onChange={this.onChangePrettifyLogMessage}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id={`prettify_${exploreId}`}\n              />\n            </InlineField>\n            <InlineField label=\"Dedup\" className={styles.horizontalInlineLabel} transparent>\n              <RadioButtonGroup\n                options={Object.values(LogsDedupStrategy).map((dedupType) => ({\n                  label: capitalize(dedupType),\n                  value: dedupType,\n                  description: LogsDedupDescription[dedupType],\n                }))}\n                value={dedupStrategy}\n                onChange={this.onChangeDedup}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <div>\n            <InlineField label=\"Display results\" className={styles.horizontalInlineLabel} transparent>\n              <RadioButtonGroup\n                disabled={isFlipping}\n                options={[\n                  {\n                    label: 'Newest first',\n                    value: LogsSortOrder.Descending,\n                    description: 'Show results newest to oldest',\n                  },\n                  {\n                    label: 'Oldest first',\n                    value: LogsSortOrder.Ascending,\n                    description: 'Show results oldest to newest',\n                  },\n                ]}\n                value={logsSortOrder}\n                onChange={this.onChangeLogsSortOrder}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </div>\n        </div>\n        <LogsMetaRow\n          logRows={logRows}\n          meta={logsMeta || []}\n          dedupStrategy={dedupStrategy}\n          dedupCount={dedupCount}\n          hasUnescapedContent={hasUnescapedContent}\n          forceEscape={forceEscape}\n          showDetectedFields={showDetectedFields}\n          onEscapeNewlines={this.onEscapeNewlines}\n          clearDetectedFields={this.clearDetectedFields}\n        />\n        <div className={styles.logsSection}>\n          <div className={styles.logRows} data-testid=\"logRows\">\n            <LogRows\n              logRows={logRows}\n              deduplicatedRows={dedupedRows}\n              dedupStrategy={dedupStrategy}\n              getRowContext={this.props.getRowContext}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              showContextToggle={showContextToggle}\n              showLabels={showLabels}\n              showTime={showTime}\n              enableLogDetails={true}\n              forceEscape={forceEscape}\n              wrapLogMessage={wrapLogMessage}\n              prettifyLogMessage={prettifyLogMessage}\n              timeZone={timeZone}\n              getFieldLinks={getFieldLinks}\n              logsSortOrder={logsSortOrder}\n              showDetectedFields={showDetectedFields}\n              onClickShowDetectedField={this.showDetectedField}\n              onClickHideDetectedField={this.hideDetectedField}\n              app={CoreApp.Explore}\n            />\n          </div>\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={navigationRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={this.scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n        {!loading && !hasData && !scanning && (\n          <div className={styles.noData}>\n            No logs found.\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n              Scan for older logs\n            </Button>\n          </div>\n        )}\n        {scanning && (\n          <div className={styles.noData}>\n            <span>{scanText}</span>\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n              Stop scan\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(2, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    headerButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    horizontalInlineLabel: css`\n      > label {\n        margin-right: 0;\n      }\n    `,\n    horizontalInlineSwitch: css`\n      padding: 0 ${theme.spacing(1)} 0 0;\n    `,\n    radioButtons: css`\n      margin: 0;\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n  SplitOpen,\n} from '@grafana/data';\nimport { Collapse } from '@grafana/ui';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { addResultsToCache, clearCache, loadLogsVolumeData } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  splitOpenFn: SplitOpen;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance, logsQueries } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      // we need to find the query, and we need to be very sure that\n      // it's a query from this datasource\n      const query = (logsQueries ?? []).find(\n        (q) => q.refId === row.dataFrame.refId && q.datasource != null && q.datasource.type === datasourceInstance.type\n      );\n      return datasourceInstance.getLogRowContext(row, options, query);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number) => {\n    const { splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      logsVolumeData,\n      loadLogsVolumeData,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      splitOpenFn,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    // We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\n    const styleOverridesForStickyNavigation = css`\n      & > div {\n        overflow: visible;\n        & > div {\n          overflow: visible;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n            <Logs\n              exploreId={exploreId}\n              datasourceType={this.props.datasourceInstance?.type}\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              logsVolumeData={logsVolumeData}\n              logsQueries={logsQueries}\n              width={width}\n              splitOpen={splitOpenFn}\n              loading={loading}\n              loadingState={loadingState}\n              loadLogsVolumeData={loadLogsVolumeData}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              absoluteRange={absoluteRange}\n              visibleRange={visibleRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              showContextToggle={this.showContextToggle}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={this.getFieldLinks}\n              addResultsToCache={() => addResultsToCache(exploreId)}\n              clearCache={() => clearCache(exploreId)}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  addResultsToCache,\n  clearCache,\n  loadLogsVolumeData,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useStyles2, PanelContainer } from '@grafana/ui';\n\nexport const NoData = () => {\n  const css = useStyles2(getStyles);\n  return (\n    <>\n      <PanelContainer data-testid=\"explore-no-data\" className={css.wrapper}>\n        <span className={css.message}>{'No data'}</span>\n      </PanelContainer>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: no-data-card;\n    padding: ${theme.spacing(3)};\n    background: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.borderRadius(2)};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 1;\n  `,\n  message: css`\n    font-size: ${theme.typography.h2.fontSize};\n    padding: ${theme.spacing(4)};\n    color: ${theme.colors.text.disabled};\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useToggle, useWindowSize } from 'react-use';\n\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, SplitOpen } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\nimport { ExploreId, StoreState } from '../../types';\n\nimport { useLinks } from './utils/links';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n  datasourceType: string;\n  splitOpenFn: SplitOpen;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpenFn, withTraceView, datasourceType } = props;\n  const getLinks = useLinks(range, splitOpenFn);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n  const toggled = () => {\n    toggleOpen();\n    reportInteraction('grafana_traces_node_graph_panel_clicked', {\n      datasourceType: datasourceType,\n      expanded: !open,\n    });\n  };\n\n  // Calculate node graph height based on window and top position, with some padding\n  const { height: windowHeight } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [top, setTop] = useState(250);\n  useEffect(() => {\n    if (containerRef.current) {\n      const { top } = containerRef.current.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [containerRef]);\n  const height = windowHeight - top - 32;\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggled() : undefined}\n    >\n      <div\n        ref={containerRef}\n        style={\n          withTraceView\n            ? { height: 500 }\n            : {\n                minHeight: 600,\n                height,\n              }\n        }\n      >\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst connector = connect(mapStateToProps, {});\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import { createSelector } from '@reduxjs/toolkit';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { CoreApp, DataQuery, DataSourceInstanceSettings } from '@grafana/data';\nimport { getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { useDispatch, useSelector } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\n\nimport { runQueries, changeQueriesAction, importQueries } from './state/query';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: ExploreId;\n}\n\nconst makeSelectors = (exploreId: ExploreId) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries)!;\n  const dsSettings = useSelector(getDatasourceInstanceSettings)!;\n  const queryResponse = useSelector(getQueryResponse)!;\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries(exploreId));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueriesAction({ queries: newQueries, exploreId }));\n\n      // if we are removing a query we want to run the remaining ones\n      if (newQueries.length < queries.length) {\n        onRunQueries();\n      }\n    },\n    [dispatch, exploreId, onRunQueries, queries]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  const onMixedDataSourceChange = async (ds: DataSourceInstanceSettings, query: DataQuery) => {\n    const queryDatasource = await getDataSourceSrv().get(query.datasource);\n    const targetDS = await getDataSourceSrv().get({ uid: ds.uid });\n    dispatch(importQueries(exploreId, queries, queryDatasource, targetDS, query.refId));\n  };\n\n  const onQueryCopied = () => {\n    reportInteraction('grafana_explore_query_row_copy');\n  };\n\n  const onQueryRemoved = () => {\n    reportInteraction('grafana_explore_query_row_remove');\n  };\n\n  const onQueryToggled = (queryStatus?: boolean) => {\n    reportInteraction('grafana_query_row_toggle', queryStatus === undefined ? {} : { queryEnabled: queryStatus });\n  };\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      onDatasourceChange={(ds: DataSourceInstanceSettings, query: DataQuery) => onMixedDataSourceChange(ds, query)}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      onQueryCopied={onQueryCopied}\n      onQueryRemoved={onQueryRemoved}\n      onQueryToggled={onQueryToggled}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { DataQueryError } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} topSpacing={2}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\n\nimport { LoadingState } from '@grafana/data';\nimport { useSelector } from 'app/types';\n\nimport { ExploreId } from '../../types';\n\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state) => state.explore[props.exploreId]?.queryResponse);\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  // Errors with ref ids are shown below the corresponding query\n  if (queryError?.refId) {\n    return null;\n  }\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useState, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { GrafanaTheme, DataSourceApi, DataQuery } from '@grafana/data';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { dispatch } from 'app/store/store';\nimport { StoreState } from 'app/types';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { changeDatasource } from '../state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from '../state/history';\nimport { setQueries } from '../state/query';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  query: RichHistoryQuery<T>;\n  dsImg: string;\n  isRemoved: boolean;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rightColumnWidth = '240px';\n  const rightColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rightColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rightColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceUid);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceUid]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    const differentDataSource = query.datasourceUid !== datasourceInstance?.uid;\n    if (differentDataSource) {\n      await changeDatasource(exploreId, query.datasourceUid, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(query.id),\n        })\n      );\n    } else {\n      performDelete(query.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !query.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.uid === query.datasourceUid ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, FilterInput, MultiSelect, RangeSlider, Select, stylesFactory, useTheme } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { ExploreId, RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate?: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  exploreId: ExploreId;\n  height: number;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n\n  return {\n    container: css`\n      display: flex;\n    `,\n    labelSlider: css`\n      font-size: ${theme.typography.size.sm};\n      &:last-of-type {\n        margin-top: ${theme.spacing.lg};\n      }\n      &:first-of-type {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-bottom: ${theme.spacing.md};\n      }\n    `,\n    containerContent: css`\n      /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n      width: calc(100% - 134px);\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing.sm};\n    `,\n    fixedSlider: css`\n      position: fixed;\n    `,\n    slider: css`\n      bottom: 10px;\n      height: ${height - 180}px;\n      width: 129px;\n      padding: ${theme.spacing.sm} 0;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    footer: css`\n      height: 60px;\n      margin: ${theme.spacing.lg} auto;\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    exploreId,\n    height,\n    activeDatasourceInstance,\n  } = props;\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      !richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: false,\n    };\n    updateFilters(filters);\n\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(queries, richHistorySearchFilters.sortOrder);\n  const sortOrderOptions = getSortOrderOptions();\n  const partialResults = queries.length && queries.length !== totalQueries;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.fixedSlider}>\n          <div className={styles.labelSlider}>Filter history</div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.from)}</div>\n          <div className={styles.slider}>\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={richHistorySettings.retentionPeriod}\n              value={[richHistorySearchFilters.from, richHistorySearchFilters.to]}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={(value) => {\n                updateFilters({ from: value![0], to: value![1] });\n              }}\n            />\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.to)}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n\n        {loading && <span>Loading results...</span>}\n\n        {!loading &&\n          Object.keys(mappedQueriesToHeadings).map((heading) => {\n            return (\n              <div key={heading}>\n                <div className={styles.heading}>\n                  {heading}{' '}\n                  <span className={styles.queries}>\n                    {partialResults ? 'Displaying ' : ''}\n                    {mappedQueriesToHeadings[heading].length} queries\n                  </span>\n                </div>\n                {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                  const idx = listOfDatasources.findIndex((d) => d.uid === q.datasourceUid);\n                  return (\n                    <RichHistoryCard\n                      query={q}\n                      key={q.id}\n                      exploreId={exploreId}\n                      dsImg={idx === -1 ? 'public/img/icn-datasource.svg' : listOfDatasources[idx].imgUrl}\n                      isRemoved={idx === -1}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        {partialResults ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { stylesFactory, useTheme, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.size.sm};\n    `,\n    spaceBetween: css`\n      margin-bottom: ${theme.spacing.lg};\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label=\"History time span\"\n          description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title=\"History time span\">\n          Grafana will keep entries up to {selectedOption?.label}.\n        </Alert>\n      )}\n      <InlineField\n        label=\"Change the default active tab from “Query history” to “Starred”\"\n        className={styles.spaceBetween}\n      >\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField\n          label=\"Only show queries for data source currently active in Explore\"\n          className={styles.spaceBetween}\n        >\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourceOnly}\n            onChange={toggleactiveDatasourceOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div\n            className={css`\n              font-weight: ${theme.typography.weight.bold};\n            `}\n          >\n            Clear query history\n          </div>\n          <div\n            className={css`\n              margin-bottom: ${theme.spacing.sm};\n            `}\n          >\n            Delete all of your query history, permanently.\n          </div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            Clear query history\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { stylesFactory, useTheme, Select, MultiSelect, FilterInput, Button } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  richHistorySettings: RichHistorySettings;\n  exploreId: ExploreId;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    activeDatasourceInstance,\n    richHistorySettings,\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    exploreId,\n  } = props;\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: true,\n    };\n    updateFilters(filters);\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  const sortOrderOptions = getSortOrderOptions();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n        {loading && <span>Loading results...</span>}\n        {!loading &&\n          queries.map((q) => {\n            const idx = listOfDatasources.findIndex((d) => d.uid === q.datasourceUid);\n            return (\n              <RichHistoryCard\n                query={q}\n                key={q.id}\n                exploreId={exploreId}\n                dsImg={idx === -1 ? 'public/img/icn-datasource.svg' : listOfDatasources[idx].imgUrl}\n                isRemoved={idx === -1}\n              />\n            );\n          })}\n        {queries.length && queries.length !== totalQueries ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Themeable, withTheme, TabbedContainer, TabConfig } from '@grafana/ui';\nimport { SortOrder, RichHistorySearchFilters, RichHistorySettings } from 'app/core/utils/richHistory';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\n\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistorySettingsTab } from './RichHistorySettingsTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const getSortOrderOptions = () =>\n  [\n    { label: 'Newest first', value: SortOrder.Descending },\n    { label: 'Oldest first', value: SortOrder.Ascending },\n    { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n    { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n  ].filter((option) => supportedFeatures().availableFilters.includes(option.value));\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  richHistoryTotal?: number;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  updateHistorySettings: (settings: RichHistorySettings) => void;\n  updateHistorySearchFilters: (exploreId: ExploreId, filters: RichHistorySearchFilters) => void;\n  loadRichHistory: (exploreId: ExploreId) => void;\n  loadMoreRichHistory: (exploreId: ExploreId) => void;\n  clearRichHistoryResults: (exploreId: ExploreId) => void;\n  deleteRichHistory: () => void;\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  onClose: () => void;\n}\n\ntype RichHistoryState = {\n  loading: boolean;\n};\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps> {\n  state: RichHistoryState = {\n    loading: false,\n  };\n\n  updateSettings = (settingsToUpdate: Partial<RichHistorySettings>) => {\n    this.props.updateHistorySettings({ ...this.props.richHistorySettings, ...settingsToUpdate });\n  };\n\n  updateFilters = (filtersToUpdate?: Partial<RichHistorySearchFilters>) => {\n    const filters = {\n      ...this.props.richHistorySearchFilters!,\n      ...filtersToUpdate,\n      page: 1, // always load fresh results when updating filters\n    };\n    this.props.updateHistorySearchFilters(this.props.exploreId, filters);\n    this.loadRichHistory();\n  };\n\n  clearResults = () => {\n    this.props.clearRichHistoryResults(this.props.exploreId);\n  };\n\n  loadRichHistory = debounce(() => {\n    this.props.loadRichHistory(this.props.exploreId);\n    this.setState({\n      loading: true,\n    });\n  }, 300);\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.updateSettings({ retentionPeriod: retentionPeriod.value });\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () =>\n    this.updateSettings({ starredTabAsFirstTab: !this.props.richHistorySettings.starredTabAsFirstTab });\n\n  toggleActiveDatasourceOnly = () =>\n    this.updateSettings({ activeDatasourceOnly: !this.props.richHistorySettings.activeDatasourceOnly });\n\n  componentDidUpdate(prevProps: Readonly<RichHistoryProps>, prevState: Readonly<{}>, snapshot?: any) {\n    if (prevProps.richHistory !== this.props.richHistory) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      richHistory,\n      richHistoryTotal,\n      height,\n      exploreId,\n      deleteRichHistory,\n      onClose,\n      firstTab,\n      activeDatasourceInstance,\n    } = this.props;\n    const { loading } = this.state;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          activeDatasourceInstance={activeDatasourceInstance}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          activeDatasourceInstance={activeDatasourceInstance}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettingsTab\n          retentionPeriod={this.props.richHistorySettings.retentionPeriod}\n          starredTabAsFirstTab={this.props.richHistorySettings.starredTabAsFirstTab}\n          activeDatasourceOnly={this.props.richHistorySettings.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","// Libraries\nimport React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\n// Components, enums\nimport { ExploreDrawer } from '../ExploreDrawer';\nimport {\n  deleteRichHistory,\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n} from '../state/history';\n\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const richHistorySearchFilters = item.richHistorySearchFilters;\n  const richHistorySettings = explore.richHistorySettings;\n  const { datasourceInstance } = item;\n  const firstTab = richHistorySettings?.starredTabAsFirstTab ? Tabs.Starred : Tabs.RichHistory;\n  const { richHistory, richHistoryTotal } = item;\n  return {\n    richHistory,\n    richHistoryTotal,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance!.name,\n    richHistorySettings,\n    richHistorySearchFilters,\n  };\n}\n\nconst mapDispatchToProps = {\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const theme = useTheme2();\n  const [height, setHeight] = useState(theme.components.horizontalDrawer.defaultHeight);\n\n  const {\n    richHistory,\n    richHistoryTotal,\n    width,\n    firstTab,\n    activeDatasourceInstance,\n    exploreId,\n    deleteRichHistory,\n    initRichHistory,\n    loadRichHistory,\n    loadMoreRichHistory,\n    clearRichHistoryResults,\n    richHistorySettings,\n    updateHistorySettings,\n    richHistorySearchFilters,\n    updateHistorySearchFilters,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    initRichHistory();\n    reportInteraction('grafana_explore_query_history_opened', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  }, [initRichHistory]);\n\n  if (!richHistorySettings) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        richHistoryTotal={richHistoryTotal}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        onClose={onClose}\n        height={height}\n        deleteRichHistory={deleteRichHistory}\n        richHistorySettings={richHistorySettings}\n        richHistorySearchFilters={richHistorySearchFilters}\n        updateHistorySettings={updateHistorySettings}\n        updateHistorySearchFilters={updateHistorySearchFilters}\n        loadRichHistory={loadRichHistory}\n        loadMoreRichHistory={loadMoreRichHistory}\n        clearRichHistoryResults={clearRichHistoryResults}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, HorizontalGroup, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        {!props.richHistoryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Rich history button\"\n            className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n            onClick={props.onClickRichHistoryButton}\n            icon=\"history\"\n          >\n            Query history\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { ValueLinkConfig, applyFieldOverrides, TimeZone, SplitOpen } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { MetaInfoText } from './MetaInfoText';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n  splitOpenFn: SplitOpen;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrame = tableResult;\n\n    if (dataFrame?.length) {\n      dataFrame = applyFieldOverrides({\n        data: [dataFrame],\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n      })[0];\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const field of dataFrame.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({\n            field,\n            rowIndex: config.valueRowIndex!,\n            splitOpenFn,\n            range,\n            dataFrame: dataFrame!,\n          });\n        };\n      }\n    }\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {dataFrame?.length ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={dataFrame}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import TracePageSearchBar from '@jaegertracing/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar';\nimport { TopOfViewRefType } from '@jaegertracing/jaeger-ui-components/src/TraceTimelineViewer/VirtualizedTraceView';\nimport React, { RefObject, useMemo, useState } from 'react';\n\nimport { DataFrame, SplitOpen, PanelData } from '@grafana/data';\nimport { Collapse } from '@grafana/ui';\nimport { StoreState, useSelector } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { TraceView } from './TraceView';\nimport { useSearch } from './useSearch';\nimport { transformDataFrames } from './utils/transform';\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n  queryResponse: PanelData;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n  const { dataFrames, splitOpenFn, exploreId, scrollElement, topOfViewRef, queryResponse } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [searchBarSuffix, setSearchBarSuffix] = useState('');\n  const datasource = useSelector(\n    (state: StoreState) => state.explore[props.exploreId!]?.datasourceInstance ?? undefined\n  );\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <>\n      <TracePageSearchBar\n        navigable={true}\n        searchValue={search}\n        setSearch={setSearch}\n        spanFindMatches={spanFindMatches}\n        searchBarSuffix={searchBarSuffix}\n        setSearchBarSuffix={setSearchBarSuffix}\n        focusedSpanIdForSearch={focusedSpanIdForSearch}\n        setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n      />\n\n      <Collapse label=\"Trace View\" isOpen>\n        <TraceView\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={splitOpenFn}\n          scrollElement={scrollElement}\n          traceProp={traceProp}\n          spanFindMatches={spanFindMatches}\n          search={search}\n          focusedSpanIdForSearch={focusedSpanIdForSearch}\n          queryResponse={queryResponse}\n          datasource={datasource}\n          topOfViewRef={topOfViewRef}\n          topOfViewRefType={TopOfViewRefType.Explore}\n        />\n      </Collapse>\n    </>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { get } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { createRef } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { compose } from 'redux';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  AbsoluteTimeRange,\n  DataQuery,\n  GrafanaTheme2,\n  LoadingState,\n  QueryFixAction,\n  RawTimeRange,\n  SplitOpenOptions,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { Collapse, CustomScrollbar, ErrorBoundaryAlert, Themeable2, withTheme2, PanelContainer } from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport appEvents from 'app/core/app_events';\nimport { supportedFeatures } from 'app/core/history/richHistoryStorageProvider';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\nimport { StoreState } from 'app/types';\nimport { AbsoluteTimeEvent } from 'app/types/events';\nimport { ExploreGraphStyle, ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreGraph } from './ExploreGraph';\nimport { ExploreGraphLabel } from './ExploreGraphLabel';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport LogsContainer from './LogsContainer';\nimport { NoData } from './NoData';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { QueryRows } from './QueryRows';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport { SecondaryActions } from './SecondaryActions';\nimport TableContainer from './TableContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { changeSize, changeGraphStyle } from './state/explorePane';\nimport { splitOpen } from './state/main';\nimport { addQueryRow, modifyQueries, scanStart, scanStopAction, setQueries } from './state/query';\nimport { makeAbsoluteTime, updateTimeRange } from './state/time';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      display: unset !important;\n      padding: ${theme.spacing(1)};\n    `,\n    exploreContainer: css`\n      display: flex;\n      flex: 1 1 auto;\n      flex-direction: column;\n      padding: ${theme.spacing(2)};\n      padding-top: 0;\n    `,\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: ExploreId;\n  theme: GrafanaTheme2;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  absoluteTimeUnsubsciber: Unsubscribable | undefined;\n  topOfViewRef = createRef<HTMLDivElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.absoluteTimeUnsubsciber = appEvents.subscribe(AbsoluteTimeEvent, this.onMakeAbsoluteTime);\n  }\n\n  componentWillUnmount() {\n    this.absoluteTimeUnsubsciber?.unsubscribe();\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', options: { key, value } });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', options: { key, value } });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onMakeAbsoluteTime = () => {\n    const { makeAbsoluteTime } = this.props;\n    makeAbsoluteTime();\n  };\n\n  onModifyQueries = (action: QueryFixAction, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: QueryFixAction) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  onChangeGraphStyle = (graphStyle: ExploreGraphStyle) => {\n    const { exploreId, changeGraphStyle } = this.props;\n    changeGraphStyle(exploreId, graphStyle);\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  onSplitOpen = (panelType: string) => {\n    return async (options?: SplitOpenOptions<DataQuery>) => {\n      this.props.splitOpen(options);\n      if (options && this.props.datasourceInstance) {\n        const target = (await getDataSourceSrv().get(options.datasourceUid)).type;\n        const source =\n          this.props.datasourceInstance.uid === MIXED_DATASOURCE_NAME\n            ? get(this.props.queries, '0.datasource.type')\n            : this.props.datasourceInstance.type;\n        const tracking = {\n          origin: 'panel',\n          panelType,\n          source,\n          target,\n          exploreId: this.props.exploreId,\n        };\n        reportInteraction('grafana_explore_split_view_opened', tracking);\n      }\n    };\n  };\n\n  renderEmptyState(exploreContainerStyles: string) {\n    return (\n      <div className={cx(exploreContainerStyles)}>\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderNoData() {\n    return <NoData />;\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, queryResponse, loading, theme, graphStyle } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    const label = <ExploreGraphLabel graphStyle={graphStyle} onChangeGraphStyle={this.onChangeGraphStyle} />;\n    return (\n      <Collapse label={label} loading={loading} isOpen>\n        <ExploreGraph\n          graphStyle={graphStyle}\n          data={graphResult!}\n          height={400}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={this.onUpdateTimeRange}\n          timeZone={timeZone}\n          annotations={queryResponse.annotations}\n          splitOpenFn={this.onSplitOpen('graph')}\n          loadingState={queryResponse.state}\n        />\n      </Collapse>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n        timeZone={timeZone}\n        splitOpenFn={this.onSplitOpen('table')}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        loadingState={queryResponse.state}\n        syncedTimes={syncedTimes}\n        width={width - spacing}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n        splitOpenFn={this.onSplitOpen('logs')}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse, datasourceInstance } = this.props;\n    const datasourceType = datasourceInstance ? datasourceInstance?.type : 'unknown';\n\n    return (\n      <NodeGraphContainer\n        dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n        datasourceType={datasourceType}\n        splitOpenFn={this.onSplitOpen('nodeGraph')}\n      />\n    );\n  }\n\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  renderTraceViewPanel() {\n    const { queryResponse, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <TraceViewContainer\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={this.onSplitOpen('traceView')}\n          scrollElement={this.scrollElement}\n          queryResponse={queryResponse}\n          topOfViewRef={this.topOfViewRef}\n        />\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n      timeZone,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const richHistoryRowButtonHidden = !supportedFeatures().queryHistoryAvailable;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n    const showNoData =\n      queryResponse.state === LoadingState.Done &&\n      [\n        queryResponse.logsFrames,\n        queryResponse.graphFrames,\n        queryResponse.nodeGraphFrames,\n        queryResponse.tableFrames,\n        queryResponse.traceFrames,\n      ].every((e) => e.length === 0);\n\n    return (\n      <CustomScrollbar\n        testId={selectors.pages.Explore.General.scrollView}\n        autoHeightMin={'100%'}\n        scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n      >\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} topOfViewRef={this.topOfViewRef} />\n        {datasourceMissing ? this.renderEmptyState(styles.exploreContainer) : null}\n        {datasourceInstance && (\n          <div className={cx(styles.exploreContainer)}>\n            <PanelContainer className={styles.queryContainer}>\n              <QueryRows exploreId={exploreId} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryRowButtonHidden={richHistoryRowButtonHidden}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </PanelContainer>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                          {showNoData && <ErrorBoundaryAlert>{this.renderNoData()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                          timeZone={timeZone}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    loading,\n    graphStyle,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    loading,\n    graphStyle,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  changeGraphStyle,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  makeAbsoluteTime,\n  addQueryRow,\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(connector, withTheme2)(Explore) as React.ComponentType<{ exploreId: ExploreId }>;\n","import { css, cx } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { ExploreUrlState, EventBusExtended, EventBusSrv, GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Themeable2, withTheme2 } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport store from 'app/core/store';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  queryDatasourceDetails,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport Explore from './Explore';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { lastSavedUrl, cleanupPaneAction, stateSave } from './state/main';\nimport { importQueries } from './state/query';\nimport { loadAndInitDatasource } from './state/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    explore: css`\n      display: flex;\n      flex: 1 1 auto;\n      flex-direction: column;\n      & + & {\n        border-left: 1px dotted ${theme.colors.border.medium};\n      }\n    `,\n    exploreSplit: css`\n      width: 50%;\n    `,\n  };\n};\n\ninterface OwnProps extends Themeable2 {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nclass ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: HTMLDivElement | null = null;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, panelsState, orgId } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      let queriesDatasourceOverride = undefined;\n      let rootDatasourceOverride = undefined;\n      // if this is starting with no queries and an initial datasource exists (but is not mixed), look up the ref to use it (initial datasource can be a UID or name here)\n      if ((!initialQueries || initialQueries.length === 0) && initialDatasource) {\n        const isDSMixed =\n          initialDatasource === MIXED_DATASOURCE_NAME || initialDatasource.uid === MIXED_DATASOURCE_NAME;\n        if (!isDSMixed) {\n          const { instance } = await loadAndInitDatasource(orgId, initialDatasource);\n          queriesDatasourceOverride = instance.getRef();\n        }\n      }\n\n      let queries = await ensureQueries(initialQueries, queriesDatasourceOverride); // this will return an empty array if there are no datasources\n\n      const queriesDatasourceDetails = queryDatasourceDetails(queries);\n      if (!queriesDatasourceDetails.noneHaveDatasource) {\n        if (!queryDatasourceDetails(queries).allDatasourceSame) {\n          if (config.featureToggles.exploreMixedDatasource) {\n            rootDatasourceOverride = await getDatasourceSrv().get(MIXED_DATASOURCE_NAME);\n          } else {\n            // if we have mixed queries but the mixed datasource feature is not on, change the datasource to the first query that has one\n            const changeDatasourceUid = queries.find((query) => query.datasource?.uid)!.datasource!.uid;\n            if (changeDatasourceUid) {\n              rootDatasourceOverride = changeDatasourceUid;\n              const datasource = await getDatasourceSrv().get(changeDatasourceUid);\n              const datasourceInit = await getDatasourceSrv().get(initialDatasource);\n              await this.props.importQueries(exploreId, queries, datasourceInit, datasource);\n              await this.props.stateSave({ replace: true });\n              queries = this.props.initialQueries;\n            }\n          }\n        }\n      }\n\n      this.props.initializeExplore(\n        exploreId,\n        rootDatasourceOverride || queries[0]?.datasource || initialDatasource,\n        queries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        panelsState\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n    this.props.cleanupPaneAction({ exploreId: this.props.exploreId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: HTMLDivElement) => {\n    this.el = el;\n  };\n\n  render() {\n    const { theme, split, exploreId, initialized } = this.props;\n    const styles = getStyles(theme);\n    const exploreClass = cx(styles.explore, split && styles.exploreSplit);\n    return (\n      <div className={exploreClass} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {initialized && <Explore exploreId={exploreId} />}\n      </div>\n    );\n  }\n}\n\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n  const fiscalYearStartMonth = getFiscalYearStartMonth(state.user);\n\n  const { datasource, queries, range: urlRange, panelsState } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone, fiscalYearStartMonth)\n    : getTimeRange(timeZone, DEFAULT_RANGE, fiscalYearStartMonth);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries: queries,\n    initialRange,\n    panelsState,\n    orgId: state.user.orgId,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  cleanupPaneAction,\n  importQueries,\n  stateSave,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = withTheme2(connector(ExplorePaneContainerUnconnected));\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { locationService } from '@grafana/runtime';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\nimport { GrafanaContext } from 'app/core/context/GrafanaContext';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\n\nimport { Branding } from '../../core/components/Branding/Branding';\nimport { getNavModel } from '../../core/selectors/navModel';\n\nimport { ExploreActions } from './ExploreActions';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { lastSavedUrl, resetExploreAction, richHistoryUpdatedAction } from './state/main';\n\nconst styles = {\n  pageScrollbarWrapper: css`\n    width: 100%;\n    flex-grow: 1;\n    min-height: 0;\n  `,\n  exploreWrapper: css`\n    display: flex;\n    height: 100%;\n  `,\n};\n\ninterface RouteProps extends GrafanaRouteComponentProps<{}, ExploreQueryParams> {}\ninterface OwnProps {}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    navModel: getNavModel(state.navIndex, 'explore'),\n    exploreState: state.explore,\n  };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n  richHistoryUpdatedAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = OwnProps & RouteProps & ConnectedProps<typeof connector>;\nclass WrapperUnconnected extends PureComponent<Props> {\n  static contextType = GrafanaContext;\n\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  componentDidMount() {\n    //This is needed for breadcrumbs and topnav.\n    //We should probably abstract this out at some point\n    this.context.chrome.update({ sectionNav: this.props.navModel.node });\n    this.context.keybindings.setupTimeRangeBindings(false);\n\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    // timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n    // using those value regardless of what is passed to the init method.\n    // The updated value is then used by Explore to get the range for each pane.\n    // This means that if `from` and `to` parameters are present in the URL,\n    // it would be impossible to change the time range in Explore.\n    // We are only doing this on mount for 2 reasons:\n    // 1: Doing it on update means we'll enter a render loop.\n    // 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n    //    each pane state in order to not trigger un URL update from timeSrv.\n    const searchParams = locationService.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      locationService.partial({ from: undefined, to: undefined }, true);\n    }\n  }\n\n  componentDidUpdate() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n    const datasourceTitle = hasSplit\n      ? `${this.props.exploreState.left.datasourceInstance?.name} | ${this.props.exploreState.right?.datasourceInstance?.name}`\n      : `${this.props.exploreState.left.datasourceInstance?.name}`;\n    const documentTitle = `${this.props.navModel.main.text} - ${datasourceTitle} - ${Branding.AppTitle}`;\n    document.title = documentTitle;\n  }\n\n  render() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n\n    return (\n      <div className={styles.pageScrollbarWrapper}>\n        <ExploreActions exploreIdLeft={ExploreId.left} exploreIdRight={ExploreId.right} />\n        <div className={styles.exploreWrapper}>\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.left} urlQuery={left} />\n          </ErrorBoundaryAlert>\n          {hasSplit && (\n            <ErrorBoundaryAlert style=\"page\">\n              <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.right} urlQuery={right} />\n            </ErrorBoundaryAlert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = connector(WrapperUnconnected);\n\nexport default Wrapper;\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n\nexport const getExploreItemSelector = (exploreId: ExploreId) => (state: StoreState) => state.explore[exploreId];\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return\"production\"!==process.env.NODE_ENV&&f(r),en.get(r,n)},set:function(r){var t=this[Q];\"production\"!==process.env.NODE_ENV&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,r as isDraft,t as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n"],"names":["ExploreActions","exploreIdLeft","exploreIdRight","actions","setActions","useState","query","useKBar","dispatch","useDispatch","splitted","useSelector","isSplit","useEffect","exploreSection","name","priority","Priority","actionsArr","push","id","keywords","perform","runQueries","section","splitClose","splitOpen","useRegisterActions","ExploreGraph","data","height","width","timeZone","absoluteRange","onChangeTime","loadingState","annotations","onHiddenSeriesChanged","splitOpenFn","graphStyle","tooltipDisplayMode","TooltipDisplayMode","theme","useTheme2","showAllTimeSeries","setShowAllTimeSeries","baseStructureRev","setBaseStructureRev","previousData","usePrevious","structureChangesRef","useRef","structureRev","current","prevStructureRev","fieldConfig","setFieldConfig","defaults","color","mode","FieldColorModeId","custom","drawStyle","GraphDrawStyle","fillOpacity","pointSize","overrides","compareArrayValues","compareDataFrameStructures","style","useStyles2","getStyles","timeRange","from","dateTime","to","raw","dataWithConfig","useMemo","registry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","styledFieldConfig","config","produce","draft","undefined","stacking","group","StackingMode","Error","applyGraphStyle","applyFieldOverrides","replaceVariables","value","fieldConfigRegistry","hiddenFrames","forEach","frame","fields","map","field","hideFrom","viz","every","identity","getFrameDisplayName","seriesToShow","slice","panelContext","eventBus","appEvents","onSplitOpen","onToggleSeriesVisibility","label","r","seriesVisibilityConfigFactory","PanelContext","length","className","cx","timeSeriesDisclaimer","Icon","disclaimerIcon","onClick","PanelRenderer","series","state","pluginId","title","onChangeTimeRange","options","tooltip","sort","SortOrder","legend","displayMode","LegendDisplayMode","showLegend","placement","calcs","css","spacing","colors","background","primary","warning","main","text","link","ALL_GRAPH_STYLE_OPTIONS","EXPLORE_GRAPH_STYLES","toUpperCase","replace","display","justifyContent","ExploreGraphLabel","props","onChangeGraphStyle","RadioButtonGroup","size","onChange","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","apply","rowSizeBase","top","left","cursor","colSizeBase","edgeBase","position","styles","right","bottom","topRight","bottomRight","bottomLeft","topLeft","Resizer","_super","_this","onMouseDown","e","onResizeStart","direction","onTouchStart","render","userSelect","replaceStyles","children","DEFAULT_SIZE","clamp","min","max","Math","snap","round","hasDirection","dir","target","RegExp","test","isTouchEvent","event","Boolean","touches","findClosestSnap","snapArray","snapGap","closestGapIndex","reduce","prev","curr","index","abs","gap","getStringSize","toString","endsWith","getPixelSize","parentSize","innerWidth","innerHeight","Number","definedProps","baseClassName","Resizable","ratio","resizable","parentLeft","parentTop","resizableLeft","resizableRight","resizableTop","resizableBottom","targetLeft","targetTop","appendBase","window","parent","parentNode","element","document","createElement","transform","flex","classList","add","appendChild","removeBase","base","removeChild","ref","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","opacity","zIndex","flexBasis","bind","onMouseMove","onMouseUp","defineProperty","get","enumerable","configurable","ownerDocument","defaultView","defaultSize","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","key","getParentSize","wrapChanged","wrap","flexWrap","minWidth","minHeight","bindEvents","addEventListener","capture","passive","unbindEvents","removeEventListener","componentDidMount","computedStyle","getComputedStyle","setState","componentWillUnmount","createSizeForCssProperty","newSize","kind","calculateNewMaxFromBoundary","maxWidth","maxHeight","boundWidth","boundHeight","boundsByDirection","widthByDirection","heightByDirection","bounds","parent_1","isFinite","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_2","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","isMouseEvent","parent_3","flexDirection","flexDir","startsWith","TouchEvent","preventDefault","stopPropagation","calculateNewMax","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","flushSync","onResize","onResizeStop","updateSize","renderResizer","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","keys","extendsProps","acc","indexOf","sizeStyle","boxSizing","flexShrink","Wrapper","as","defaultProps","drawerSlide","keyframes","components","horizontalDrawer","defaultHeight","stylesFactory","container","border","weak","shadows","z3","navbarFixed","drawerActive","rzHandle","secondary","shade","ExploreDrawer","drawerWidth","mapDispatchToProps","connect","exploreId","item","explore","loading","queryResponse","onClose","dataFrames","error","reportInteraction","statsTab","icon","content","InspectStatsTab","request","timezone","jsonTab","InspectJSONTab","dataTab","InspectDataTab","isLoading","withTransforms","withFieldConfig","app","CoreApp","tabs","QueryInspector","onRefreshQuery","errorTab","InspectErrorTab","TabbedContainer","closeIconTooltip","TimeSyncButton","isSynced","Tooltip","ToolbarButton","variant","ExploreTimeControls","Component","range","getShiftedTimeRange","dateTimeForTimeZone","onMoveTimePicker","adjustedFrom","dateMath","adjustedTo","timeRangeFrom","timeRangeTo","getZoomedTimeRange","fiscalYearStartMonth","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","onMoveBackward","onMoveBack","onMoveForward","onZoom","TimePickerWithHistory","widthOverride","onChangeTimePicker","LiveTailButton","start","pause","resume","isLive","isPaused","stop","buttonVariant","onClickMain","ButtonGroup","iconOnly","CSSTransition","mountOnEnter","unmountOnExit","timeout","in","classNames","enter","stopButtonEnter","enterActive","stopButtonEnterActive","exit","stopButtonExit","exitActive","stopButtonExitActive","LiveTailControls","controls","useCallback","setPausedStateAction","changeRefreshInterval","RefreshPicker","useLiveTailControls","AddToDashboard","lazy","then","default","UnConnectedExploreToolbar","PureComponent","async","changeDatasource","dsSettings","uid","importQueries","cancelQueries","syncTimes","createAndCopyShortLink","location","href","split","origin","closeSplit","showSmallTimePicker","refreshInterval","refreshPickerTooltip","refreshPickerText","refreshPickerWidth","onIntervalChanged","onChangeRefreshInterval","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onRefresh","onRunQuery","noIntervalPicker","datasourceMissing","hasLiveOption","containerWidth","topOfViewRef","showSmallDataSourcePicker","showExploreToDashboard","contextSrv","AccessControlAction","PageToolbar","ExploreId","pageIcon","leftItems","DashNavButton","onCopyShortLink","DataSourcePicker","mixed","onChangeDatasource","datasourceRef","hideTextValue","filter","onCloseSplitView","onOpenSplitView","disabled","Suspense","fallback","renderRefreshPicker","SetInterval","func","interval","datasourceType","updateTimeZoneForSession","updateFiscalYearStartMonthForSession","ExploreToolbar","exploreItem","datasourceInstance","meta","streaming","getRef","type","getTimeZone","user","getFiscalYearStartMonth","connector","Time","timeInMs","humanize","formatTime","inSeconds","toFixed","duration","toDuration","hours","minutes","seconds","ElapsedTime","resetKey","elapsed","setElapsed","useInterval","LiveLogs","super","React","onPause","scrollTop","clientHeight","scrollHeight","currentTarget","logRowsToRender","rowsToRender","logRows","nextProps","onResume","logsRowsLive","typography","fontFamilyMonospace","bodySmall","fontSize","logsRowFade","tinycolor","info","transparent","setAlpha","logsRowsIndicator","h6","button","fullWidth","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","onScroll","scrollContainerRef","row","dateTimeFormat","timeEpochMs","hasAnsi","LogMessageAnsi","entry","liveEndDiv","scrollTo","Button","stopLive","LiveLogsWithTheme","withTheme2","metaContainer","metaItem","metaLabel","fontWeightMedium","metaValue","MetaInfoItem","memo","MetaInfoText","metaItems","LogsMetaRow","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","LogsMetaKind","some","MAX_CHARACTERS","renderMetaItem","LogLabels","labels","displayName","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","changeTime","time","format","systemDateFormats","createPageContent","page","Spinner","logsRange","CustomScrollbar","autoHide","pagesWrapper","pagesContainer","pageType","pageNumber","queryRange","line","selectedBg","selectedText","v1","sm","LogsNavigation","logsSortOrder","scrollToTopLogs","visibleRange","queries","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","a","sortPages","findIndex","olderLogsButton","navButton","indexChange","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","ErrorAlert","isOpen","setIsOpen","message","showButton","Alert","severity","LogsVolumePanel","onUpdateTimeRange","onLoadLogsVolume","parseInt","logLinesBased","logLinesBasedVisibleRange","fullRangeData","logsVolumeData","createVisualisationData","logLinesBasedData","logLinesBasedDataVisibleRange","LogsVolumePanelContent","extraInfo","LoadingState","zoomRatio","selectedTimeRange","dataRange","logsLevelZoomRatio","InlineField","oldInfoText","Collapse","contentContainer","extraInfoContainer","SETTINGS_KEYS","UnthemedLogs","createRef","showLabels","store","showTime","wrapLogMessage","prettifyLogMessage","hiddenLogLevels","isFlipping","flipOrderTimer","setTimeout","prevState","newSortOrder","cancelFlippingTimer","deduplicationType","checked","hiddenRawLevels","level","LogLevel","onStartScanning","onStopScanning","concat","k","memoizeOne","dedupedRows","dedupLogRows","sum","duplicates","filterLogLevels","Set","firstTimeStamp","lastTimeStamp","topLogsRef","scrollIntoView","clearTimeout","logsMeta","logsSeries","loadLogsVolumeData","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","hasData","checkUnescapedContent","filteredLogs","filterRows","dedupRows","navigationRange","createNavigationRange","scanText","rangeUtil","onToggleLogLevel","logOptions","InlineFieldRow","horizontalInlineLabel","horizontalInlineSwitch","onChangeLabels","onChangeWrapLogMessage","onChangePrettifyLogMessage","values","dedupType","capitalize","description","LogsDedupDescription","onChangeDedup","radioButtons","onChangeLogsSortOrder","logsSection","LogRows","deduplicatedRows","getRowContext","enableLogDetails","onClickShowDetectedField","showDetectedField","onClickHideDetectedField","hideDetectedField","noData","fill","onClickScan","onClickStopScan","Logs","shape","borderRadius","medium","headerButton","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","visible","transitionDuration","LogsContainer","updateTimeRange","hasLogsContextSupport","find","q","refId","dataFrame","datasource","getLogRowContext","rowIndex","getFieldLinksForExplore","styleOverridesForStickyNavigation","logsResult","logsVolumeDataProvider","rows","NoData","PanelContainer","wrapper","h2","NoDataSourceCallToAction","canCreateDataSource","footer","rel","ctaElement","cardClassName","breakpoints","lg","CallToActionCard","callToActionElement","warningText","NodeGraphContainer","withTraceView","getLinks","useLinks","frames","nodes","useCategorizeFrames","open","toggleOpen","useToggle","windowHeight","useWindowSize","containerRef","setTop","countWarning","Badge","collapsible","onToggle","expanded","NodeGraph","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","exploreItemSelector","getExploreItemSelector","createSelector","history","eventBridge","getDatasourceSrv","getInstanceSettings","makeSelectors","onRunQueries","newQueries","changeQueriesAction","onAddQuery","getNextRefIdChar","QueryEditorRows","onDatasourceChange","ds","queryDatasource","getDataSourceSrv","targetDS","onMixedDataSourceChange","onQueriesChange","onQueryCopied","onQueryRemoved","onQueryToggled","queryStatus","queryEnabled","FadeIn","defaultStyle","transition","transitionStyles","exited","entering","entered","exiting","Transition","onExited","ErrorContainer","queryError","showError","topSpacing","ResponseErrorContainer","deleteHistoryItem","commentHistoryItem","starHistoryItem","setQueries","isRemoved","rightColumnWidth","rightColumnContentWidth","cardColor","bg2","queryCard","border1","radius","palette","orange","cardRow","xs","datasourceContainer","weight","semibold","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","regular","commentButtonRow","textArea","runButton","md","dsImg","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","datasourceUid","getQueryDsInstance","useTheme","onUpdateComment","queryHistoryEnabled","onCancelUpdateComment","updateComment","TextArea","placeholder","IconButton","queriesToCopy","createQueryText","join","copyStringToClipboard","notifyApp","createSuccessNotification","createUrlFromRichHistory","performDelete","queryId","starred","ShowConfirmModalEvent","yesText","onConfirm","iconType","newValue","onKeyDown","keyEvent","shiftKey","ctrlKey","src","datasourceName","queryText","queriesToRun","differentDataSource","bgColor","isLight","gray5","dark4","labelSlider","containerContent","containerSlider","fixedSlider","slider","selectors","filterInput","multiselect","xxs","sessionName","heading","h4","light","RichHistoryQueriesTab","totalQueries","richHistorySearchFilters","updateFilters","clearRichHistoryResults","loadMoreRichHistory","richHistorySettings","activeDatasourceInstance","listOfDatasources","createDatasourcesList","datasourceFilters","activeDatasourceOnly","lastUsedDatasourceFilters","filters","search","sortOrder","retentionPeriod","mappedQueriesToHeadings","mapQueriesToHeadings","sortOrderOptions","getSortOrderOptions","partialResults","mapNumbertoTimeInSlider","RangeSlider","tooltipAlwaysVisible","orientation","formatTooltipResult","reverse","onAfterChange","option","FilterInput","Select","order","idx","imgUrl","spaceBetween","input","retentionPeriodOptions","RichHistorySettingsTab","starredTabAsFirstTab","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","selectedOption","v","supportedFeatures","changeRetention","Field","MAX_HISTORY_ITEMS","onlyActiveDataSource","clearHistory","bold","RichHistoryStarredTab","Tabs","availableFilters","includes","UnThemedRichHistory","settingsToUpdate","updateHistorySettings","filtersToUpdate","updateHistorySearchFilters","loadRichHistory","debounce","updateSettings","componentDidUpdate","prevProps","snapshot","richHistory","richHistoryTotal","firstTab","RichHistory","Starred","Settings","toggleActiveDatasourceOnly","defaultTab","withTheme","initRichHistory","setHeight","_e","_dir","SecondaryActions","containerMargin","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryRowButtonHidden","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","loadingInState","tableResult","TableContainer","getTableHeight","onCellFilterAdded","ariaLabel","tableWidth","PANEL_BORDER","valueRowIndex","Table","TraceViewContainer","scrollElement","traceProp","transformDataFrames","setSearch","spanFindMatches","useSearch","spans","focusedSpanIdForSearch","setFocusedSpanIdForSearch","searchBarSuffix","setSearchBarSuffix","TracePageSearchBar","navigable","searchValue","TraceView","topOfViewRefType","TopOfViewRefType","Explore","rawRange","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","queryKeys","addQueryRow","makeAbsoluteTime","action","modifyQuery","modifier","modification","modifyQueries","changeSize","scanStart","scanStopAction","changeGraphStyle","openDrawer","panelType","source","MIXED_DATASOURCE_NAME","tracking","getNodeGraphDataFrames","absoluteTimeUnsubsciber","AbsoluteTimeEvent","onMakeAbsoluteTime","unsubscribe","renderEmptyState","exploreContainerStyles","renderNoData","renderGraphPanel","graphResult","renderTablePanel","renderLogsPanel","renderNodeGraphPanel","showTrace","memoizedGetNodeGraphDataFrames","renderTraceViewPanel","preferredVisualisationType","showMetrics","showTable","showLogs","showNodeGraph","exploreMain","exploreContainer","showPanels","showRichHistory","queryHistoryAvailable","showQueryInspector","showNoData","logsFrames","graphFrames","nodeGraphFrames","tableFrames","traceFrames","testId","autoHeightMin","scrollRefCallback","toggleShowRichHistory","toggleShowQueryInspector","disableHeight","ErrorBoundary","compose","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","lastSavedUrl","refreshExplore","el","exploreEvents","EventBusSrv","initialized","initialDatasource","initialQueries","initialRange","panelsState","orgId","queriesDatasourceOverride","rootDatasourceOverride","instance","loadAndInitDatasource","ensureQueries","queryDatasourceDetails","noneHaveDatasource","allDatasourceSame","changeDatasourceUid","datasourceInit","stateSave","initializeExplore","removeAllListeners","cleanupPaneAction","exploreSplit","exploreClass","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","urlState","parseUrlState","urlRange","lastUsedDatasourceKeyForOrgId","getTimeRange","DEFAULT_RANGE","ExplorePaneContainer","pageScrollbarWrapper","exploreWrapper","resetExploreAction","richHistoryUpdatedAction","navModel","getNavModel","navIndex","exploreState","WrapperUnconnected","context","chrome","update","sectionNav","node","keybindings","setupTimeRangeBindings","searchParams","locationService","queryParams","datasourceTitle","documentTitle","Branding","hasSplit","GrafanaContext","callback","delay","savedCallback","interval_1","setInterval","clearInterval","Q","getPrototypeOf","Function","Z","isArray","L","o","nn","u","has","f","set","delete","X","Map","l","rn","writable","clear","h","freeze","isFrozen","tn","_","U","j","O","g","S","w","m","P","M","H","A","I","R","D","F","z","getOwnPropertyDescriptor","E","N","T","C","en","on","Proxy","revocable","revoke","proxy","J","K","G","W","Symbol","B","Reflect","for","iterator","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","deleteProperty","un","Promise","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","path","op","$","an","fn"],"sourceRoot":""}