{"version":3,"file":"jaegerPlugin.964028c4c27f929b5d88.js","mappings":"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","sources":["webpack://grafana/./public/app/core/utils/tracing.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/CheatSheet.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/util.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/SearchForm.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/components/QueryEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/graphTransform.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/datasource.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/module.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/responseTransform.ts","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser_stream.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logfmt_parser.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logger.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/request_logger.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/streaming.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/stringify.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/logfmt.js","webpack://grafana/../../opt/drone/yarncache/split-npm-0.2.10-a950dc8c82-9eb1195608.zip/node_modules/split/index.js","webpack://grafana/../../opt/drone/yarncache/through-npm-2.3.8-df5f72a16e-a38c3e0598.zip/node_modules/through/index.js"],"sourcesContent":["/**\n * Get non overlapping duration of the ranges as they can overlap or have gaps.\n */\nimport { FieldType, MutableDataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\n\nexport function getNonOverlappingDuration(ranges: Array<[number, number]>): number {\n  ranges.sort((a, b) => a[0] - b[0]);\n  const mergedRanges = ranges.reduce((acc, range) => {\n    if (!acc.length) {\n      return [range];\n    }\n    const tail = acc.slice(-1)[0];\n    const [prevStart, prevEnd] = tail;\n    const [start, end] = range;\n    if (end < prevEnd) {\n      // In this case the range is completely inside the prev range so we can just ignore it.\n      return acc;\n    }\n\n    if (start > prevEnd) {\n      // There is no overlap so we can just add it to stack\n      return [...acc, range];\n    }\n\n    // We know there is overlap and current range ends later than previous so we can just extend the range\n    return [...acc.slice(0, -1), [prevStart, end]] as Array<[number, number]>;\n  }, [] as Array<[number, number]>);\n\n  return mergedRanges.reduce((acc, range) => {\n    return acc + (range[1] - range[0]);\n  }, 0);\n}\n\n/**\n * Returns a map of the spans with children array for easier processing. It will also contain empty spans in case\n * span is missing but other spans are its children. This is more generic because it needs to allow iterating over\n * both arrays and dataframe views.\n */\nexport function makeSpanMap<T>(getSpan: (index: number) => { span: T; id: string; parentIds: string[] } | undefined): {\n  [id: string]: { span: T; children: string[] };\n} {\n  const spanMap: { [id: string]: { span?: T; children: string[] } } = {};\n\n  let span;\n  for (let index = 0; (span = getSpan(index)), !!span; index++) {\n    if (!spanMap[span.id]) {\n      spanMap[span.id] = {\n        span: span.span,\n        children: [],\n      };\n    } else {\n      spanMap[span.id].span = span.span;\n    }\n\n    for (const parentId of span.parentIds) {\n      if (parentId) {\n        if (!spanMap[parentId]) {\n          spanMap[parentId] = {\n            span: undefined,\n            children: [span.id],\n          };\n        } else {\n          spanMap[parentId].children.push(span.id);\n        }\n      }\n    }\n  }\n  return spanMap as { [id: string]: { span: T; children: string[] } };\n}\n\nexport function getStats(duration: number, traceDuration: number, selfDuration: number) {\n  return {\n    main: `${toFixedNoTrailingZeros(duration)}ms (${toFixedNoTrailingZeros((duration / traceDuration) * 100)}%)`,\n    secondary: `${toFixedNoTrailingZeros(selfDuration)}ms (${toFixedNoTrailingZeros(\n      (selfDuration / duration) * 100\n    )}%)`,\n  };\n}\n\nfunction toFixedNoTrailingZeros(n: number) {\n  return parseFloat(n.toFixed(2));\n}\n\n/**\n * Create default frames used when returning data for node graph.\n */\nexport function makeFrames() {\n  const nodesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.title, type: FieldType.string },\n      { name: Fields.subTitle, type: FieldType.string },\n      { name: Fields.mainStat, type: FieldType.string, config: { displayName: 'Total time (% of trace)' } },\n      { name: Fields.secondaryStat, type: FieldType.string, config: { displayName: 'Self time (% of total)' } },\n      {\n        name: Fields.color,\n        type: FieldType.number,\n        config: { color: { mode: 'continuous-GrYlRd' }, displayName: 'Self time / Trace duration' },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  const edgesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.target, type: FieldType.string },\n      { name: Fields.source, type: FieldType.string },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  return [nodesFrame, edgesFrame];\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nexport default function CheatSheet() {\n  const styles = useStyles2(getStyles);\n  return (\n    <>\n      <h2 id=\"jaeger-cheat-sheet\">Jaeger Cheat Sheet</h2>\n      <p>\n        This cheat sheet provides a quick overview of the query types that are available. For more details about the\n        Jaeger data source, check out{' '}\n        <a\n          href=\"https://grafana.com/docs/grafana/latest/datasources/jaeger\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={styles.anchorTag}\n        >\n          the documentation\n        </a>\n        .\n      </p>\n\n      <hr />\n      <ul className={styles.unorderedList}>\n        <li>\n          Search - filter traces by service name. Addtionally, you can filter by tags or min/max duration, as well as\n          limit the number of traces that are returned.\n        </li>\n        <li>TraceID - if you have a trace ID, simply enter the trace ID to see the trace.</li>\n        <li>\n          JSON File - you can upload a JSON file that contains a single trace to visualize it. If the file has multiple\n          traces then the first trace is used for visualization. An example of a valid JSON file can be found in{' '}\n          <a\n            href=\"https://grafana.com/docs/grafana/latest/datasources/jaeger/#upload-json-trace-file\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={styles.anchorTag}\n          >\n            this section\n          </a>{' '}\n          of the documentation.\n        </li>\n      </ul>\n    </>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  anchorTag: css`\n    color: ${theme.colors.text.link};\n  `,\n  unorderedList: css`\n    list-style-type: none;\n  `,\n});\n","import logfmt from 'logfmt';\n\nexport function convertTagsLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  const data: any = logfmt.parse(tags);\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    if (typeof value !== 'string') {\n      data[key] = String(value);\n    }\n  });\n  return JSON.stringify(data);\n}\n\nexport function transformToLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  try {\n    return logfmt.stringify(JSON.parse(tags));\n  } catch {\n    return tags;\n  }\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { SelectableValue, toOption } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { fuzzyMatch, InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createErrorNotification } from 'app/core/copy/appNotification';\nimport { dispatch } from 'app/store/store';\n\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery } from '../types';\nimport { transformToLogfmt } from '../util';\n\nconst durationPlaceholder = 'e.g. 1.2s, 100ms, 500us';\n\ntype Props = {\n  datasource: JaegerDatasource;\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport const ALL_OPERATIONS_KEY = 'All';\nconst allOperationsOption: SelectableValue<string> = {\n  label: ALL_OPERATIONS_KEY,\n  value: undefined,\n};\n\nexport function SearchForm({ datasource, query, onChange }: Props) {\n  const [serviceOptions, setServiceOptions] = useState<Array<SelectableValue<string>>>();\n  const [operationOptions, setOperationOptions] = useState<Array<SelectableValue<string>>>();\n  const [isLoading, setIsLoading] = useState<{\n    services: boolean;\n    operations: boolean;\n  }>({\n    services: false,\n    operations: false,\n  });\n\n  const loadOptions = useCallback(\n    async (url: string, loaderOfType: string, query = ''): Promise<Array<SelectableValue<string>>> => {\n      setIsLoading((prevValue) => ({ ...prevValue, [loaderOfType]: true }));\n\n      try {\n        const values: string[] | null = await datasource.metadataRequest(url);\n        if (!values) {\n          return [{ label: `No ${loaderOfType} found`, value: `No ${loaderOfType} found` }];\n        }\n\n        const options: SelectableValue[] = values.sort().map((option) => ({\n          label: option,\n          value: option,\n        }));\n\n        const filteredOptions = options.filter((item) => (item.value ? fuzzyMatch(item.value, query).found : false));\n        return filteredOptions;\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(notifyApp(createErrorNotification('Error', error)));\n        }\n        return [];\n      } finally {\n        setIsLoading((prevValue) => ({ ...prevValue, [loaderOfType]: false }));\n      }\n    },\n    [datasource]\n  );\n\n  useEffect(() => {\n    const getServices = async () => {\n      const services = await loadOptions('/api/services', 'services');\n      if (query.service && getTemplateSrv().containsTemplate(query.service)) {\n        services.push(toOption(query.service));\n      }\n      setServiceOptions(services);\n    };\n    getServices();\n  }, [datasource, loadOptions, query.service]);\n\n  useEffect(() => {\n    const getOperations = async () => {\n      const operations = await loadOptions(\n        `/api/services/${encodeURIComponent(getTemplateSrv().replace(query.service!))}/operations`,\n        'operations'\n      );\n      if (query.operation && getTemplateSrv().containsTemplate(query.operation)) {\n        operations.push(toOption(query.operation));\n      }\n      setOperationOptions([allOperationsOption, ...operations]);\n    };\n    if (query.service) {\n      getOperations();\n    }\n  }, [datasource, query.service, loadOptions, query.operation]);\n\n  return (\n    <div className={css({ maxWidth: '500px' })}>\n      <InlineFieldRow>\n        <InlineField label=\"Service Name\" labelWidth={14} grow>\n          <Select\n            inputId=\"service\"\n            options={serviceOptions}\n            onOpenMenu={() => loadOptions('/api/services', 'services')}\n            isLoading={isLoading.services}\n            value={serviceOptions?.find((v) => v?.value === query.service) || undefined}\n            placeholder=\"Select a service\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                service: v?.value!,\n                operation: query.service !== v?.value ? undefined : query.operation,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n            aria-label={'select-service-name'}\n            allowCustomValue={true}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Operation Name\" labelWidth={14} grow disabled={!query.service}>\n          <Select\n            inputId=\"operation\"\n            options={operationOptions}\n            onOpenMenu={() =>\n              loadOptions(\n                `/api/services/${encodeURIComponent(getTemplateSrv().replace(query.service!))}/operations`,\n                'operations'\n              )\n            }\n            isLoading={isLoading.operations}\n            value={operationOptions?.find((v) => v.value === query.operation) || null}\n            placeholder=\"Select an operation\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                operation: v?.value! || undefined,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n            aria-label={'select-operation-name'}\n            allowCustomValue={true}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Tags\" labelWidth={14} grow tooltip=\"Values should be in logfmt.\">\n          <Input\n            id=\"tags\"\n            value={transformToLogfmt(query.tags)}\n            placeholder=\"http.status_code=200 error=true\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                tags: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Min Duration\" labelWidth={14} grow>\n          <Input\n            id=\"minDuration\"\n            name=\"minDuration\"\n            value={query.minDuration || ''}\n            placeholder={durationPlaceholder}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                minDuration: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Max Duration\" labelWidth={14} grow>\n          <Input\n            id=\"maxDuration\"\n            name=\"maxDuration\"\n            value={query.maxDuration || ''}\n            placeholder={durationPlaceholder}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                maxDuration: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Limit\" labelWidth={14} grow tooltip=\"Maximum number of returned results\">\n          <Input\n            id=\"limit\"\n            name=\"limit\"\n            value={query.limit || ''}\n            type=\"number\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                limit: v.currentTarget.value ? parseInt(v.currentTarget.value, 10) : undefined,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, QueryEditorProps } from '@grafana/data';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useStyles2 } from '@grafana/ui';\n\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery, JaegerQueryType } from '../types';\n\nimport { SearchForm } from './SearchForm';\n\ntype Props = QueryEditorProps<JaegerDatasource, JaegerQuery>;\n\nexport function QueryEditor({ datasource, query, onChange, onRunQuery }: Props) {\n  const styles = useStyles2(getStyles);\n\n  const onChangeQuery = (value: string) => {\n    const nextQuery: JaegerQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return <SearchForm datasource={datasource} query={query} onChange={onChange} />;\n      case 'upload':\n        return (\n          <div className={styles.fileDropzoneContainer}>\n            <FileDropzone\n              options={{ multiple: false }}\n              onLoad={(result) => {\n                datasource.uploadedJson = result;\n                onRunQuery();\n              }}\n            />\n          </div>\n        );\n      default:\n        return (\n          <InlineFieldRow>\n            <InlineField label=\"Trace ID\" labelWidth={14} grow>\n              <QueryField\n                query={query.query}\n                onChange={onChangeQuery}\n                onRunQuery={onRunQuery}\n                onBlur={() => {}}\n                placeholder={'Enter a Trace ID (run with Shift+Enter)'}\n                portalOrigin=\"jaeger\"\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <InlineFieldRow>\n          <InlineField label=\"Query type\">\n            <RadioButtonGroup<JaegerQueryType>\n              options={[\n                { value: 'search', label: 'Search' },\n                { value: undefined, label: 'TraceID' },\n                { value: 'upload', label: 'JSON File' },\n              ]}\n              value={query.queryType}\n              onChange={(v) =>\n                onChange({\n                  ...query,\n                  queryType: v,\n                })\n              }\n              size=\"md\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {renderEditorBody()}\n      </div>\n    </>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    width: 100%;\n  `,\n  fileDropzoneContainer: css`\n    padding: ${theme.spacing(2)};\n  `,\n});\n","import { DataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\n\nimport { getNonOverlappingDuration, getStats, makeFrames, makeSpanMap } from '../../../core/utils/tracing';\n\nimport { Span, TraceResponse } from './types';\n\ninterface Node {\n  [Fields.id]: string;\n  [Fields.title]: string;\n  [Fields.subTitle]: string;\n  [Fields.mainStat]: string;\n  [Fields.secondaryStat]: string;\n  [Fields.color]: number;\n}\n\ninterface Edge {\n  [Fields.id]: string;\n  [Fields.target]: string;\n  [Fields.source]: string;\n}\n\nexport function createGraphFrames(data: TraceResponse): DataFrame[] {\n  const { nodes, edges } = convertTraceToGraph(data);\n  const [nodesFrame, edgesFrame] = makeFrames();\n\n  for (const node of nodes) {\n    nodesFrame.add(node);\n  }\n\n  for (const edge of edges) {\n    edgesFrame.add(edge);\n  }\n\n  return [nodesFrame, edgesFrame];\n}\n\nfunction convertTraceToGraph(data: TraceResponse): { nodes: Node[]; edges: Edge[] } {\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n\n  const traceDuration = findTraceDuration(data.spans);\n\n  const spanMap = makeSpanMap((index) => {\n    if (index >= data.spans.length) {\n      return undefined;\n    }\n    const span = data.spans[index];\n    return {\n      span,\n      id: span.spanID,\n      parentIds: span.references?.filter((r) => r.refType === 'CHILD_OF').map((r) => r.spanID) || [],\n    };\n  });\n\n  for (const span of data.spans) {\n    const process = data.processes[span.processID];\n\n    const ranges: Array<[number, number]> = spanMap[span.spanID].children.map((c) => {\n      const span = spanMap[c].span;\n      return [span.startTime, span.startTime + span.duration];\n    });\n    const childrenDuration = getNonOverlappingDuration(ranges);\n    const selfDuration = span.duration - childrenDuration;\n    const stats = getStats(span.duration / 1000, traceDuration / 1000, selfDuration / 1000);\n\n    nodes.push({\n      [Fields.id]: span.spanID,\n      [Fields.title]: process?.serviceName ?? '',\n      [Fields.subTitle]: span.operationName,\n      [Fields.mainStat]: stats.main,\n      [Fields.secondaryStat]: stats.secondary,\n      [Fields.color]: selfDuration / traceDuration,\n    });\n\n    const parentSpanID = span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID;\n    // Sometimes some span can be missing. Don't add edges for those.\n    if (parentSpanID && spanMap[parentSpanID].span) {\n      edges.push({\n        [Fields.id]: parentSpanID + '--' + span.spanID,\n        [Fields.target]: span.spanID,\n        [Fields.source]: parentSpanID,\n      });\n    }\n  }\n\n  return { nodes, edges };\n}\n\n/**\n * Get the duration of the whole trace as it isn't a part of the response data.\n * Note: Seems like this should be the same as just longest span, but this is probably safer.\n */\nfunction findTraceDuration(spans: Span[]): number {\n  let traceEndTime = 0;\n  let traceStartTime = Infinity;\n\n  for (const span of spans) {\n    if (span.startTime < traceStartTime) {\n      traceStartTime = span.startTime;\n    }\n\n    if (span.startTime + span.duration > traceEndTime) {\n      traceEndTime = span.startTime + span.duration;\n    }\n  }\n\n  return traceEndTime - traceStartTime;\n}\n","import { identity, omit, pick, pickBy } from 'lodash';\nimport { lastValueFrom, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateMath,\n  DateTime,\n  FieldType,\n  MutableDataFrame,\n  ScopedVars,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\nimport { SpanBarOptions } from '@jaegertracing/jaeger-ui-components';\nimport { NodeGraphOptions } from 'app/core/components/NodeGraphSettings';\nimport { serializeParams } from 'app/core/utils/fetch';\nimport { getTimeSrv, TimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nimport { ALL_OPERATIONS_KEY } from './components/SearchForm';\nimport { createGraphFrames } from './graphTransform';\nimport { createTableFrame, createTraceFrame } from './responseTransform';\nimport { JaegerQuery } from './types';\nimport { convertTagsLogfmt } from './util';\n\nexport interface JaegerJsonData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\nexport class JaegerDatasource extends DataSourceApi<JaegerQuery, JaegerJsonData> {\n  uploadedJson: string | ArrayBuffer | null = null;\n  nodeGraph?: NodeGraphOptions;\n  spanBar?: SpanBarOptions;\n  constructor(\n    private instanceSettings: DataSourceInstanceSettings<JaegerJsonData>,\n    private readonly timeSrv: TimeSrv = getTimeSrv(),\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.nodeGraph = instanceSettings.jsonData.nodeGraph;\n  }\n\n  async metadataRequest(url: string, params?: Record<string, any>): Promise<any> {\n    const res = await lastValueFrom(this._request(url, params, { hideFromInspector: true }));\n    return res.data.data;\n  }\n\n  isSearchFormValid(query: JaegerQuery): boolean {\n    return !!query.service;\n  }\n\n  query(options: DataQueryRequest<JaegerQuery>): Observable<DataQueryResponse> {\n    // At this moment we expect only one target. In case we somehow change the UI to be able to show multiple\n    // traces at one we need to change this.\n    const target: JaegerQuery = options.targets[0];\n\n    if (!target) {\n      return of({ data: [emptyTraceDataFrame] });\n    }\n\n    if (target.queryType === 'search' && !this.isSearchFormValid(target)) {\n      return of({ error: { message: 'You must select a service.' }, data: [] });\n    }\n\n    if (target.queryType !== 'search' && target.query) {\n      return this._request(\n        `/api/traces/${encodeURIComponent(this.templateSrv.replace(target.query, options.scopedVars))}`\n      ).pipe(\n        map((response) => {\n          const traceData = response?.data?.data?.[0];\n          if (!traceData) {\n            return { data: [emptyTraceDataFrame] };\n          }\n          let data = [createTraceFrame(traceData)];\n          if (this.nodeGraph?.enabled) {\n            data.push(...createGraphFrames(traceData));\n          }\n          return {\n            data,\n          };\n        })\n      );\n    }\n\n    if (target.queryType === 'upload') {\n      if (!this.uploadedJson) {\n        return of({ data: [] });\n      }\n\n      try {\n        const traceData = JSON.parse(this.uploadedJson as string).data[0];\n        let data = [createTraceFrame(traceData)];\n        if (this.nodeGraph?.enabled) {\n          data.push(...createGraphFrames(traceData));\n        }\n        return of({ data });\n      } catch (error) {\n        return of({ error: { message: 'The JSON file uploaded is not in a valid Jaeger format' }, data: [] });\n      }\n    }\n\n    let jaegerInterpolated = pick(this.applyVariables(target, options.scopedVars), [\n      'service',\n      'operation',\n      'tags',\n      'minDuration',\n      'maxDuration',\n      'limit',\n    ]);\n    // remove empty properties\n    let jaegerQuery = pickBy(jaegerInterpolated, identity);\n\n    if (jaegerQuery.operation === ALL_OPERATIONS_KEY) {\n      jaegerQuery = omit(jaegerQuery, 'operation');\n    }\n\n    if (jaegerQuery.tags) {\n      jaegerQuery = {\n        ...jaegerQuery,\n        tags: convertTagsLogfmt(jaegerQuery.tags.toString()),\n      };\n    }\n\n    // TODO: this api is internal, used in jaeger ui. Officially they have gRPC api that should be used.\n    return this._request(`/api/traces`, {\n      ...jaegerQuery,\n      ...this.getTimeRange(),\n      lookback: 'custom',\n    }).pipe(\n      map((response) => {\n        return {\n          data: [createTableFrame(response.data.data, this.instanceSettings)],\n        };\n      })\n    );\n  }\n\n  interpolateVariablesInQueries(queries: JaegerQuery[], scopedVars: ScopedVars): JaegerQuery[] {\n    if (!queries || queries.length === 0) {\n      return [];\n    }\n\n    return queries.map((query) => {\n      return {\n        ...query,\n        datasource: this.getRef(),\n        ...this.applyVariables(query, scopedVars),\n      };\n    });\n  }\n\n  applyVariables(query: JaegerQuery, scopedVars: ScopedVars) {\n    let expandedQuery = { ...query };\n\n    if (query.tags && this.templateSrv.containsTemplate(query.tags)) {\n      expandedQuery = {\n        ...query,\n        tags: this.templateSrv.replace(query.tags, scopedVars),\n      };\n    }\n\n    return {\n      ...expandedQuery,\n      service: this.templateSrv.replace(query.service ?? '', scopedVars),\n      operation: this.templateSrv.replace(query.operation ?? '', scopedVars),\n      minDuration: this.templateSrv.replace(query.minDuration ?? '', scopedVars),\n      maxDuration: this.templateSrv.replace(query.maxDuration ?? '', scopedVars),\n    };\n  }\n\n  async testDatasource(): Promise<any> {\n    return lastValueFrom(\n      this._request('/api/services').pipe(\n        map((res) => {\n          const values: any[] = res?.data?.data || [];\n          const testResult =\n            values.length > 0\n              ? { status: 'success', message: 'Data source connected and services found.' }\n              : {\n                  status: 'error',\n                  message:\n                    'Data source connected, but no services received. Verify that Jaeger is configured properly.',\n                };\n          return testResult;\n        }),\n        catchError((err: any) => {\n          let message = 'Jaeger: ';\n          if (err.statusText) {\n            message += err.statusText;\n          } else {\n            message += 'Cannot connect to Jaeger';\n          }\n\n          if (err.status) {\n            message += `. ${err.status}`;\n          }\n\n          if (err.data && err.data.message) {\n            message += `. ${err.data.message}`;\n          } else if (err.data) {\n            message += `. ${JSON.stringify(err.data)}`;\n          }\n          return of({ status: 'error', message: message });\n        })\n      )\n    );\n  }\n\n  getTimeRange(): { start: number; end: number } {\n    const range = this.timeSrv.timeRange();\n    return {\n      start: getTime(range.from, false),\n      end: getTime(range.to, true),\n    };\n  }\n\n  getQueryDisplayText(query: JaegerQuery) {\n    return query.query || '';\n  }\n\n  private _request(apiUrl: string, data?: any, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const params = data ? serializeParams(data) : '';\n    const url = `${this.instanceSettings.url}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = {\n      ...options,\n      url,\n    };\n\n    return getBackendSrv().fetch(req);\n  }\n}\n\nfunction getTime(date: string | DateTime, roundUp: boolean) {\n  if (typeof date === 'string') {\n    date = dateMath.parse(date, roundUp)!;\n  }\n  return date.valueOf() * 1000;\n}\n\nconst emptyTraceDataFrame = new MutableDataFrame({\n  fields: [\n    {\n      name: 'trace',\n      type: FieldType.trace,\n      values: [],\n    },\n  ],\n  meta: {\n    preferredVisualisationType: 'trace',\n    custom: {\n      traceFormat: 'jaeger',\n    },\n  },\n});\n","import { DataSourcePlugin } from '@grafana/data';\n\nimport CheatSheet from './CheatSheet';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { JaegerDatasource } from './datasource';\n\nexport const plugin = new DataSourcePlugin(JaegerDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setQueryEditorHelp(CheatSheet);\n","import React from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { SpanBarSettings } from '@jaegertracing/jaeger-ui-components';\nimport { NodeGraphSettings } from 'app/core/components/NodeGraphSettings';\nimport { TraceToLogsSettings } from 'app/core/components/TraceToLogs/TraceToLogsSettings';\nimport { TraceToMetricsSettings } from 'app/core/components/TraceToMetrics/TraceToMetricsSettings';\n\nexport type Props = DataSourcePluginOptionsEditorProps;\n\nexport const ConfigEditor = ({ options, onOptionsChange }: Props) => {\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:16686\"\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <TraceToLogsSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n\n      {config.featureToggles.traceToMetrics ? (\n        <div className=\"gf-form-group\">\n          <TraceToMetricsSettings options={options} onOptionsChange={onOptionsChange} />\n        </div>\n      ) : null}\n\n      <div className=\"gf-form-group\">\n        <NodeGraphSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n\n      <div className=\"gf-form-group\">\n        <SpanBarSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n    </>\n  );\n};\n","import {\n  DataFrame,\n  DataSourceInstanceSettings,\n  FieldType,\n  MutableDataFrame,\n  TraceLog,\n  TraceSpanRow,\n} from '@grafana/data';\nimport { transformTraceData } from '@jaegertracing/jaeger-ui-components';\n\nimport { JaegerResponse, Span, TraceProcess, TraceResponse } from './types';\n\nexport function createTraceFrame(data: TraceResponse): DataFrame {\n  const spans = data.spans.map((s) => toSpanRow(s, data.processes));\n\n  const frame = new MutableDataFrame({\n    fields: [\n      { name: 'traceID', type: FieldType.string },\n      { name: 'spanID', type: FieldType.string },\n      { name: 'parentSpanID', type: FieldType.string },\n      { name: 'operationName', type: FieldType.string },\n      { name: 'serviceName', type: FieldType.string },\n      { name: 'serviceTags', type: FieldType.other },\n      { name: 'startTime', type: FieldType.number },\n      { name: 'duration', type: FieldType.number },\n      { name: 'logs', type: FieldType.other },\n      { name: 'tags', type: FieldType.other },\n      { name: 'warnings', type: FieldType.other },\n      { name: 'stackTraces', type: FieldType.other },\n    ],\n    meta: {\n      preferredVisualisationType: 'trace',\n      custom: {\n        traceFormat: 'jaeger',\n      },\n    },\n  });\n\n  for (const span of spans) {\n    frame.add(span);\n  }\n\n  return frame;\n}\n\nfunction toSpanRow(span: Span, processes: Record<string, TraceProcess>): TraceSpanRow {\n  return {\n    spanID: span.spanID,\n    traceID: span.traceID,\n    parentSpanID: span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID,\n    operationName: span.operationName,\n    // from micro to millis\n    startTime: span.startTime / 1000,\n    duration: span.duration / 1000,\n    logs: span.logs.map((l) => ({\n      ...l,\n      timestamp: l.timestamp / 1000,\n    })),\n    tags: span.tags,\n    warnings: span.warnings ?? undefined,\n    stackTraces: span.stackTraces,\n    serviceName: processes[span.processID].serviceName,\n    serviceTags: processes[span.processID].tags,\n  };\n}\n\nexport function createTableFrame(data: TraceResponse[], instanceSettings: DataSourceInstanceSettings): DataFrame {\n  const frame = new MutableDataFrame({\n    fields: [\n      {\n        name: 'traceID',\n        type: FieldType.string,\n        config: {\n          unit: 'string',\n          displayNameFromDS: 'Trace ID',\n          links: [\n            {\n              title: 'Trace: ${__value.raw}',\n              url: '',\n              internal: {\n                datasourceUid: instanceSettings.uid,\n                datasourceName: instanceSettings.name,\n                query: {\n                  query: '${__value.raw}',\n                },\n              },\n            },\n          ],\n        },\n      },\n      { name: 'traceName', type: FieldType.string, config: { displayNameFromDS: 'Trace name' } },\n      { name: 'startTime', type: FieldType.time, config: { displayNameFromDS: 'Start time' } },\n      { name: 'duration', type: FieldType.number, config: { displayNameFromDS: 'Duration', unit: 'µs' } },\n    ],\n    meta: {\n      preferredVisualisationType: 'table',\n    },\n  });\n  // Show the most recent traces\n  const traceData = data.map(transformToTraceData).sort((a, b) => b?.startTime! - a?.startTime!);\n\n  for (const trace of traceData) {\n    frame.add(trace);\n  }\n\n  return frame;\n}\n\nfunction transformToTraceData(data: TraceResponse) {\n  const traceData = transformTraceData(data);\n  if (!traceData) {\n    return;\n  }\n\n  return {\n    traceID: traceData.traceID,\n    startTime: traceData.startTime / 1000,\n    duration: traceData.duration,\n    traceName: traceData.traceName,\n  };\n}\n\nexport function transformToJaeger(data: MutableDataFrame): JaegerResponse {\n  let traceResponse: TraceResponse = {\n    traceID: '',\n    spans: [],\n    processes: {},\n    warnings: null,\n  };\n  let processes: string[] = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const span = data.get(i);\n\n    // Set traceID\n    if (!traceResponse.traceID) {\n      traceResponse.traceID = span.traceID;\n    }\n\n    // Create process if doesn't exist\n    if (!processes.find((p) => p === span.serviceName)) {\n      processes.push(span.serviceName);\n      traceResponse.processes[`p${processes.length}`] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n\n    // Create span\n    traceResponse.spans.push({\n      traceID: span.traceID,\n      spanID: span.spanID,\n      duration: span.duration * 1000,\n      references: span.parentSpanID\n        ? [\n            {\n              refType: 'CHILD_OF',\n              spanID: span.parentSpanID,\n              traceID: span.traceID,\n            },\n          ]\n        : [],\n      flags: 0,\n      logs: span.logs.map((l: TraceLog) => ({\n        ...l,\n        timestamp: l.timestamp * 1000,\n      })),\n      operationName: span.operationName,\n      processID:\n        Object.keys(traceResponse.processes).find(\n          (key) => traceResponse.processes[key].serviceName === span.serviceName\n        ) || '',\n      startTime: span.startTime * 1000,\n      tags: span.tags,\n      warnings: span.warnings ? span.warnings : null,\n    });\n  }\n\n  return { data: [traceResponse], total: 0, limit: 0, offset: 0, errors: null };\n}\n","\n/*\nModule dependencies.\n*/\n\n/*\nJSON:\n\nParse logplex request bodies, providing the\nparsed object as `req.body`.\n\nOptions: none\n\n@param content_type {String} use when Content-Type matches this string\n@param parser {Function} parsing function takes String body and returns new body\n@return {Function}\n@api public\n*/\n\nexports = module.exports = function(options) {\n  var limit;\n  if (options == null) options = {};\n\n  return function(req, res, next) {\n    if (req._body) return next();\n    var is_mime = req.header('content-type') === options.contentType;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = req.body || {};\n    var buf;\n    buf = \"\";\n    req.setEncoding(\"utf8\");\n    req.on(\"data\", function(chunk) {\n      return buf += chunk;\n    });\n    req.on(\"end\", function() {\n      try {\n        var lines = []\n        buf.trim().split(\"\\n\").forEach(function(line){\n          lines.push(options.parser(line))\n        })\n        req.body = lines;\n      } catch (err) {\n        err.body = buf;\n        err.status = 400;\n        return next(err);\n      }\n      return next();\n    });\n  };\n};\n","var split = require('split');\nvar through = require('through');\nvar Readable = require('stream').Readable;\nvar PassThrough = require('stream').PassThrough;\nvar logfmt   = require('../logfmt');\n\nexports = module.exports = function(options){\n  if(options == null) options = {};\n  var mime = options.contentType || \"application/logplex-1\";\n\n  return function(req, res, next) {\n\n    //honor already parsed bodies\n    if (req._body) return next();\n\n    //mime-type check\n    var is_mime = req.header('content-type') === mime;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = new PassThrough({objectMode: true});\n    req.pipe(logfmt.streamParser()).pipe(req.body);\n\n    return next();\n  }\n}\n\n","exports.debug = false;\n\nexports.parse = function(line) {\n  var key = '';\n  var value = '';\n  var is_number = true;\n  var in_key    = false;\n  var in_value  = false;\n  var in_quote  = false;\n  var had_quote = false;\n  var object    = {};\n  var debug     = exports.debug;\n\n  if(line[line.length - 1] == '\\n'){\n    line = line.slice(0,line.length - 1)\n  }\n\n  for(var i=0; i <= line.length; i++){\n\n    if((line[i] == ' ' && !in_quote) || i == line.length){\n      if(in_key && key.length > 0){\n        object[key] = true;\n      }else if(in_value){\n        if(value == 'true') value = true;\n        else if(value == 'false') value = false;\n        else if(value === '' && !had_quote) value = null;\n        object[key] = value;\n        value = '';\n      }\n\n      if(i == line.length) break;\n      else {\n        in_key   = false;\n        in_value = false;\n        in_quote = false;\n        had_quote = false;\n      }\n    }\n\n    if(line[i] == '=' && !in_quote){\n      if(debug) console.log('split')\n      //split\n      in_key = false;\n      in_value = true;\n    }\n    else if(line[i] == '\\\\'){\n      i ++ ;\n      value += line[i];\n      if(debug) console.log('escape: ' + line[i])\n    }\n    else if(line[i] == '\"'){\n      had_quote = true;\n      in_quote = !in_quote;\n      if(debug) console.log('in quote: ' + in_quote)\n    }\n    else if(line[i] != ' ' && !in_value && !in_key){\n      if(debug) console.log('start key with: ' + line[i])\n      in_key = true;\n      key = line[i];\n    }\n    else if(in_key){\n      if(debug) console.log('add to key: ' + line[i])\n      key += line[i]\n    }\n    else if(in_value){\n      if(debug) console.log('add to value: ' + line[i])\n      value += line[i];\n    }\n  }\n\n  return object;\n}\n","exports.log = function(data, stream) {\n  this.stream = this.stream || process.stdout;\n  if(stream == undefined) stream = this.stream;\n\n  var logData = Object.assign({}, this.defaultData, data);\n\n  if(this.timers){\n    for(var key in this.timers){\n      var now = (new Date()).getTime()\n      logData[key] = (now - this.timers[key]).toString() + 'ms' ;\n    }\n  }\n\n  stream.write(this.stringify(logData) + \"\\n\");\n}\n\nexports.time = function(label) {\n  var logfmt = require('../logfmt');\n  var startTime = (new Date()).getTime();\n  var label  = label || 'elapsed';\n  var timer  = new logfmt();\n  timer.stream = this.stream;\n  timer.defaultData = this.defaultData;\n  timer.timers = Object.assign({}, this.timers)\n  timer.timers[label] = startTime;\n  return timer;\n}\n\nexports.namespace = function(object) {\n  var logfmt = require('../logfmt');\n  var namespaced = new logfmt()\n  var namespace  = Object.assign({}, this.defaultData, object);\n  namespaced.stream = this.stream;\n  namespaced.defaultData = namespace\n  namespaced.timers = this.timers;\n  return namespaced;\n}\n\nexports.error = function(err, id) {\n  this.maxErrorLines = this.maxErrorLines || 10;\n  if (id === undefined) {\n    id = Math.random().toString().slice(2, 12);\n  }\n  var errorLogger = this.namespace({\n    error: true,\n    id:id,\n    now: (new Date()).toISOString()\n  })\n  errorLogger.log({ message:err.message });\n  if (err.stack) {\n    var stack = err.stack.split('\\n');\n    for (var line in stack) {\n      if (line >= this.maxErrorLines) break;\n      errorLogger.log({ line:line, trace:stack[line] });\n    }\n  }\n}\n","var commonFormatter = function(req, res){\n  if((typeof req.path) == 'function'){\n    //in restify path is a function\n    var path = req.path();\n  }\n  else{\n    //in express it is an attribute\n    var path = req.originalUrl || req.path || req.url;\n  }\n\n  var httpHeader = req.header && req.header('x-forwarded-for')\n  var requestID  = req.header && req.header('x-request-id')\n\n  var ip = req.ip || httpHeader\n                  || req.connection.remoteAddress;\n\n  var requestData =  {\n    ip: ip,\n    time: (new Date()).toISOString(),\n    method: req.method,\n    path: path,\n    \"status\": res.statusCode,\n  }\n\n  if (requestID) {\n    requestData.request_id = requestID;\n  }\n\n  if(res.get){\n    requestData.content_length = res.get('content-length');\n    requestData.content_type = res.get('content-type');\n  }\n  return requestData;\n}\n\nvar immediateLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var data = formatter(req, res);\n    logger.log(data);\n    next();\n  }\n}\n\nvar timingLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var elapsed = options.elapsed || 'elapsed';\n    var timer   = logger.time(elapsed);\n    var end = res.end;\n    res.end = function(chunk, encoding) {\n      var data = formatter(req, res);\n      res.end = end;\n      res.end(chunk, encoding);\n      timer.log(data);\n    };\n    next();\n  }\n}\n\nexports.init = function(logger, options, formatter) {\n  this.logger = logger;\n\n  if(!formatter && !options){\n    formatter = commonFormatter;\n    options = {};\n  }\n  else if(!formatter){\n    if(typeof options == 'function'){\n      formatter = options;\n      options = {};\n    }else{\n      formatter = commonFormatter;\n    }\n  }\n  options = options || {};\n\n  if(options.immediate){\n    return immediateLogger(logger, options, formatter);\n  }else{\n    return timingLogger(logger, options, formatter);\n  }\n}\n\nexports.commonFormatter = commonFormatter;\n","var split       = require('split')\nvar through     = require('through');\nvar PassThrough = require('stream').PassThrough;\n\n//returns a stream that splits and parses logfmt into objects\nexports.streamParser = function(options){\n  var options = options || {};\n\n  var streamParser = new PassThrough();\n  var self = this;\n\n  var logfmtStream = through(function(line){\n    if(line !== '') this.queue(self.parse(line))\n  })\n\n  // When a source stream is piped to us, undo that pipe, and save\n  // off the source stream piped into our internally managed streams.\n  streamParser.on('pipe', function(source) {\n    if(source.unpipe) source.unpipe(this);\n    this.transformStream = source.pipe(split()).pipe(logfmtStream);\n  });\n\n  // When we're piped to another stream, instead pipe our internal\n  // transform stream to that destination.\n  streamParser.pipe = function(destination, options) {\n    return this.transformStream.pipe(destination, options);\n  };\n\n  return streamParser;\n}\n\n// returns a stream that stringifies objects\nexports.streamStringify = function(options){\n  var self = this;\n  var options = options || {};\n  if(options.hasOwnProperty('delimiter')){\n    var delim = options.delimiter;\n  }else{\n    var delim = \"\\n\";\n  }\n\n  return through(function(data){\n    this.queue(self.stringify(data) + delim)\n  }, function(){\n    this.queue(null)\n  })\n}\n","exports.stringify = function(data){\n  var line = '';\n\n  for(var key in data) {\n    var value = data[key];\n    var is_null = false;\n    if(value == null) {\n      is_null = true;\n      value = '';\n    }\n    else value = value.toString();\n\n    var needs_quoting  = value.indexOf(' ') > -1 || value.indexOf('=') > -1;\n    var needs_escaping = value.indexOf('\"') > -1 || value.indexOf(\"\\\\\") > -1;\n\n    if(needs_escaping) value = value.replace(/[\"\\\\]/g, '\\\\$&');\n    if(needs_quoting) value = '\"' + value + '\"';\n    if(value === '' && !is_null) value = '\"\"';\n\n    line += key + '=' + value + ' ';\n  }\n\n  //trim traling space\n  return line.substring(0,line.length-1);\n}\n\n","//constructor\nfunction logfmt() {\n}\nmodule.exports = logfmt;\n\nvar streaming        = require('./lib/streaming');\nvar bodyParser       = require('./lib/body_parser');\nvar bodyParserStream = require('./lib/body_parser_stream');\nvar logfmtParser     = require('./lib/logfmt_parser');\nvar logger           = require('./lib/logger');\nvar requestLogger    = require('./lib/request_logger');\nvar serializer       = require('./lib/stringify');\n\n//Build up logfmt prototype\nObject.assign(logfmt.prototype, logger);\nObject.assign(logfmt.prototype, streaming);\n\nlogfmt.prototype.stringify = serializer.stringify;\nlogfmt.prototype.parse = logfmtParser.parse;\n\n// Synchronous body parser\nlogfmt.prototype.bodyParser = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParser({ contentType: mime, parser: this.parse });\n};\n\n// Stream parser\nlogfmt.prototype.bodyParserStream = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParserStream({ contentType: mime });\n};\n\nlogfmt.prototype.requestLogger = function(options, formatter) {\n  return requestLogger.init(this, options, formatter);\n};\n\nlogfmt.prototype.requestLogger.commonFormatter = requestLogger.commonFormatter;\n\nObject.assign(logfmt, logfmt.prototype);\n","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper) {\n  var decoder = new Decoder()\n  var soFar = ''\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) { \n    var pieces = (soFar + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end) \n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"names":["getNonOverlappingDuration","ranges","sort","a","b","reduce","acc","range","length","tail","slice","prevStart","prevEnd","start","end","makeSpanMap","getSpan","spanMap","span","index","id","children","parentId","parentIds","push","undefined","getStats","duration","traceDuration","selfDuration","main","toFixedNoTrailingZeros","secondary","n","parseFloat","toFixed","makeFrames","MutableDataFrame","fields","name","Fields","type","FieldType","config","displayName","color","mode","meta","preferredVisualisationType","getStyles","theme","anchorTag","css","colors","text","link","unorderedList","convertTagsLogfmt","tags","data","logfmt","Object","keys","forEach","key","value","String","JSON","stringify","transformToLogfmt","parse","durationPlaceholder","allOperationsOption","label","SearchForm","datasource","query","onChange","serviceOptions","setServiceOptions","useState","operationOptions","setOperationOptions","isLoading","setIsLoading","services","operations","loadOptions","useCallback","async","url","loaderOfType","prevValue","values","metadataRequest","options","map","option","filter","item","fuzzyMatch","found","error","Error","dispatch","notifyApp","createErrorNotification","useEffect","service","getTemplateSrv","containsTemplate","toOption","getServices","encodeURIComponent","replace","operation","getOperations","className","maxWidth","InlineFieldRow","InlineField","labelWidth","grow","Select","inputId","onOpenMenu","find","v","placeholder","menuPlacement","isClearable","allowCustomValue","disabled","tooltip","Input","I","currentTarget","minDuration","maxDuration","limit","parseInt","container","fileDropzoneContainer","spacing","createGraphFrames","nodes","edges","spans","traceEndTime","traceStartTime","Infinity","startTime","findTraceDuration","spanID","references","r","refType","process","processes","processID","c","childrenDuration","stats","serviceName","operationName","parentSpanID","convertTraceToGraph","nodesFrame","edgesFrame","node","add","edge","JaegerDatasource","DataSourceApi","constructor","instanceSettings","timeSrv","getTimeSrv","templateSrv","super","this","nodeGraph","jsonData","params","lastValueFrom","_request","hideFromInspector","isSearchFormValid","target","targets","of","emptyTraceDataFrame","queryType","message","scopedVars","pipe","response","traceData","createTraceFrame","enabled","uploadedJson","jaegerInterpolated","pick","applyVariables","jaegerQuery","pickBy","identity","omit","toString","getTimeRange","lookback","createTableFrame","interpolateVariablesInQueries","queries","getRef","expandedQuery","res","status","catchError","err","statusText","timeRange","getTime","from","to","getQueryDisplayText","apiUrl","serializeParams","req","getBackendSrv","fetch","date","roundUp","dateMath","valueOf","custom","traceFormat","plugin","DataSourcePlugin","setConfigEditor","onOptionsChange","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","TraceToLogsSettings","TraceToMetricsSettings","NodeGraphSettings","setQueryEditor","onRunQuery","styles","useStyles2","onChangeQuery","nextQuery","RadioButtonGroup","size","FileDropzone","multiple","onLoad","result","QueryField","onBlur","portalOrigin","renderEditorBody","setQueryEditorHelp","href","rel","s","toSpanRow","traceID","logs","l","timestamp","warnings","stackTraces","serviceTags","frame","unit","displayNameFromDS","links","title","internal","datasourceUid","uid","datasourceName","transformToTraceData","trace","transformTraceData","traceName","transformToJaeger","traceResponse","i","get","p","flags","total","offset","errors","module","exports","next","_body","header","contentType","body","buf","setEncoding","on","chunk","lines","trim","split","line","parser","PassThrough","mime","objectMode","streamParser","debug","in_key","in_value","in_quote","had_quote","object","console","log","stream","stdout","logData","assign","defaultData","timers","now","Date","write","time","timer","namespace","namespaced","maxErrorLines","Math","random","errorLogger","toISOString","stack","commonFormatter","path","originalUrl","httpHeader","requestID","requestData","ip","connection","remoteAddress","method","statusCode","request_id","content_length","content_type","init","logger","formatter","immediate","immediateLogger","elapsed","encoding","timingLogger","through","self","logfmtStream","queue","source","unpipe","transformStream","destination","streamStringify","hasOwnProperty","delim","delimiter","is_null","needs_quoting","indexOf","substring","streaming","bodyParser","bodyParserStream","logfmtParser","requestLogger","serializer","prototype","Decoder","matcher","mapper","decoder","soFar","emit","piece","buffer","pieces","pop","Stream","opts","ended","destroyed","_ended","drain","paused","shift","_end","writable","call","readable","autoDestroy","destroy","nextTick","arguments","pause","resume"],"sourceRoot":""}